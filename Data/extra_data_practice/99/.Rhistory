#z = as.character(df_timestamps$point_description[y+1])
f = df_timestamps$system_time_stamp
a = x
maxless <- max(f[f <= a])
# find out which value that is
y = which(f == maxless)
z = as.character(df_timestamps$point_description[y])
z1 = as.character(df_timestamps$point_description[y+1])
z2 <- paste(z1, z, sep=",")
x <- cbind(x, newColumn = z2)
# temp = abs(df_timestamps$system_time_stamp-x$system_time_stamp)
# z = min( temp[temp!=min(temp)] )
# print(z)
#
# temp2 <- which(temp == z)
# z2 <- as.character(df_timestamps$point_description[temp2])
# print(z2)
# z3 <- paste(y1, z2, sep=",")
# print(z3)
#z2 <- paste(y1, z, sep=",")
#print(z2)
#x$trial_time <- z2
#vec = vector()
#vec <- c(df_timestamps$point_description[y], df_timestamps$point_description[temp2])
#x <- rbind(x, data.frame(time_trial = c(df_timestamps$point_description[y], df_timestamps$point_description[temp2])))
return(x)
}
a <- apply(practice1, 2, trial_time)
trial_time(practice1[,c("system_time_stamp")])
View(practice1)
a
a <- trial_time(practice1[,c("system_time_stamp")])
View(a)
practice1 <- df_99_main[1:300,]
practice2 <- df_99_main[6667:6671,]
trial_time <- function(x) {
f = df_timestamps$system_time_stamp
a = x
maxless <- max(f[f <= a])
# find out which value that is
y = which(f == maxless)
z = as.character(df_timestamps$point_description[y])
z1 = as.character(df_timestamps$point_description[y+1])
z2 <- paste(z1, z, sep=",")
x <- cbind(x, newColumn = z2)
return(x)
}
trial_time(practice1)
trial_time(practice1[,c("system_time_stamp")])
trial_time(practice1[,c("system_time_stamp")])
practice1 <- df_99_main[1,]
trial_time(practice1[,c("system_time_stamp")])
practice1 <- df_99_main[200,]
trial_time(practice1[,c("system_time_stamp")])
practice2 <- df_99_main[6660:6671,]
a <- apply(practice2[,c("system_time_stamp")], 2, trial_time)
a <- apply(practice2[,c("system_time_stamp")], 2, trial_time)
a <- lapply(practice2[,c("system_time_stamp")], 2, trial_time)
a <- lapply(practice2[,c("system_time_stamp")], trial_time)
a
[6660:6671,]
practice2 <- df_99_main
a <- lapply(practice2[,c("system_time_stamp")], trial_time)
practice2$newColumn <- a
View(practice)
View(practice2)
practice2 <- df_99_main[1:10,]
trial_time <- function(x) {
f = df_timestamps$system_time_stamp
a = x
maxless <- max(f[f <= a])
# find out which value that is
y = which(f == maxless)
z = as.character(df_timestamps$point_description[y])
z1 = as.character(df_timestamps$point_description[y+1])
z2 <- paste(z1, z, sep=",")
x <- cbind(x, newColumn = z2)
return(x)
}
a <- lapply(practice2[,c("system_time_stamp")], trial_time)
practice2$newColumn <- a
a <- lapply(practice2$system_time_stamp, trial_time)
practice2$newColumn <- a
trial_time <- function(x) {
f = df_timestamps$system_time_stamp
a = x$system_time_stamp
maxless <- max(f[f <= a])
# find out which value that is
y = which(f == maxless)
z = as.character(df_timestamps$point_description[y])
z1 = as.character(df_timestamps$point_description[y+1])
z2 <- paste(z1, z, sep=",")
x <- cbind(x, newColumn = z2)
return(x)
}
a <- lapply(practice2, trial_time)
trial_time <- function(x) {
f = df_timestamps$system_time_stamp
a = x
maxless <- max(f[f <= a])
# find out which value that is
y = which(f == maxless)
z = as.character(df_timestamps$point_description[y])
z1 = as.character(df_timestamps$point_description[y+1])
z2 <- paste(z1, z, sep=",")
x <- cbind(x, newColumn = z2)
return(x)
}
a <- lapply(practice2, trial_time)
a <- lapply(practice2$system_time_stamp, trial_time)
practice2$newColumn <- a
trial_time <- function(x) {
f = df_timestamps$system_time_stamp
a = x
maxless <- max(f[f <= a])
# find out which value that is
y = which(f == maxless)
z = as.character(df_timestamps$point_description[y])
z1 = as.character(df_timestamps$point_description[y+1])
z2 <- paste(z1, z, sep=",")
#x <- cbind(x, newColumn = z2)
return(z2)
}
a <- lapply(practice2$system_time_stamp, trial_time)
practice2$newColumn <- a
practice2 <- df_99_main
trial_time <- function(x) {
f = df_timestamps$system_time_stamp
a = x
maxless <- max(f[f <= a])
# find out which value that is
y = which(f == maxless)
z = as.character(df_timestamps$point_description[y])
z1 = as.character(df_timestamps$point_description[y+1])
z2 <- paste(z1, z, sep=",")
#x <- cbind(x, newColumn = z2)
return(z2)
}
a <- lapply(practice2$system_time_stamp, trial_time)
practice2$newColumn <- a
a <- lapply(df_99_main$system_time_stamp, trial_time)
df_99_main$newColumn <- a
df_99_main$X <- rowMeans(subset(df_99_main, select = c(7, 10)), na.rm = TRUE)
df_99_main$Y <- rowMeans(subset(df_99_main, select = c(8, 11)), na.rm = TRUE)
View(df_99_main)
df_99_main$Trial_description <- a
df_99_main[,-13]
View(df_99_main)
df_99_main <- [,-13]
df_99_main <- df_99_main[,-13]
add_aoi(df_99_main, aoi, 'X', 'Y', aoi_name, x_min_col = "X_min",
x_max_col = "X_max", y_min_col = "Y_min", y_max_col = "Y_max")
aoi <- read.csv('~/Documents/Github/MannerPathPriming-2ET/Analysis/aoi.csv', header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
add_aoi(df_99_main, aoi, 'X', 'Y', aoi_name, x_min_col = "X_min",
x_max_col = "X_max", y_min_col = "Y_min", y_max_col = "Y_max")
View(df_99_main)
View(aoi)
aoi <- read.csv('~/Documents/Github/MannerPathPriming-2ET/Analysis/aoi.csv', header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
View(aoi)
add_aoi(df_99_main, aoi, 'X', 'Y',Trial_description, x_min_col = "X_min",
x_max_col = "X_max", y_min_col = "Y_min", y_max_col = "Y_max")
aoi <- read.csv('~/Documents/Github/MannerPathPriming-2ET/Analysis/aoi.csv', header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
add_aoi(df_99_main, aoi_dataframe = aoi, 'X', 'Y',aoi_name="Looks", x_min_col = "X_min",
x_max_col = "X_max", y_min_col = "Y_min", y_max_col = "Y_max")
aoi <- read.csv('~/Documents/Github/MannerPathPriming-2ET/Analysis/aoi.csv', header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
add_aoi(df_99_main, aoi_dataframe = aoi, 'X', 'Y', aoi_name="Looks", x_min_col = "X_min",
x_max_col = "X_max", y_min_col = "Y_min", y_max_col = "Y_max")
trial_time <- function(x) {
f = df_timestamps$system_time_stamp
a = x
maxless <- max(f[f <= a])
# find out which value that is
y = which(f == maxless)
z = as.character(df_timestamps$point_description[y])
#x <- cbind(x, newColumn = z2)
return(z)
}
a <- lapply(df_99_main$system_time_stamp, trial_time)
df_99_main$Trial_description <- a
aoi <- read.csv('~/Documents/Github/MannerPathPriming-2ET/Analysis/aoi.csv', header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
add_aoi(df_99_main, aoi_dataframe = aoi, 'X', 'Y', aoi_name="Looks", x_min_col = "X_min",
x_max_col = "X_max", y_min_col = "Y_min", y_max_col = "Y_max")
aoi$Trial_description
df_99_main$Trial_description
is.list(df_99_main$Trial_description)
as.character(df_99_main$Trial_description)
df_99_main$Trial_description <- as.character(df_99_main$Trial_description)
aoi <- read.csv('~/Documents/Github/MannerPathPriming-2ET/Analysis/aoi.csv', header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
add_aoi(df_99_main, aoi_dataframe = aoi, 'X', 'Y', aoi_name="Looks", x_min_col = "X_min",
x_max_col = "X_max", y_min_col = "Y_min", y_max_col = "Y_max")
aoi <- read.csv('~/Documents/Github/MannerPathPriming-2ET/Analysis/aoi.csv', header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1", na.rm=TRUE)
aoi <- na.omit(aoi)
add_aoi(df_99_main, aoi_dataframe = aoi, 'X', 'Y', aoi_name="Looks", x_min_col = "X_min",
x_max_col = "X_max", y_min_col = "Y_min", y_max_col = "Y_max")
df_99_main_aoi <- add_aoi(df_99_main, aoi_dataframe = aoi, 'X', 'Y', aoi_name="Looks", x_min_col = "X_min",
x_max_col = "X_max", y_min_col = "Y_min", y_max_col = "Y_max")
View(df_99_main_aoi)
df_99_main_aoi <- na.omit(df_99_main_aoi)
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "trial",
time_column = "system_time_stamp",
trackloss_column = "TrackLoss_column",
aoi_columns = "Looking",
treat_non_aoi_looks_as_missing = TRUE
)
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "TrackLoss_column",
aoi_columns = "Looking",
treat_non_aoi_looks_as_missing = TRUE
)
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = "Looking",
treat_non_aoi_looks_as_missing = TRUE
)
df_99_main$Trackloss_column <- as.factor(ifelse(df_99_main$L_valid == '1' & df_99_main$R_valid == '1', TRUE,
ifelse(df_99_main$L_valid == '0' & df_99_main$R_valid == '1', FALSE,
ifelse(df_99_main$L_valid == '1' & df_99_main$R_valid == '0', FALSE,
ifelse(df_99_main$L_valid == '0' & df_99_main$R_valid == '0', FALSE, 'Error')))))
a <- lapply(df_99_main$system_time_stamp, trial_time)
df_99_main$Trial_description <- a
df_99_main$X <- rowMeans(subset(df_99_main, select = c(7, 10)), na.rm = TRUE)
df_99_main$Y <- rowMeans(subset(df_99_main, select = c(8, 11)), na.rm = TRUE)
df_99_main$Trial_description <- as.character(df_99_main$Trial_description)
aoi <- read.csv('~/Documents/Github/MannerPathPriming-2ET/Analysis/aoi.csv', header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
aoi <- na.omit(aoi)
df_99_main_aoi <- add_aoi(df_99_main, aoi_dataframe = aoi, 'X', 'Y', aoi_name="Looks", x_min_col = "X_min",
x_max_col = "X_max", y_min_col = "Y_min", y_max_col = "Y_max")
df_99_main_aoi <- na.omit(df_99_main_aoi)
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = "Looking",
treat_non_aoi_looks_as_missing = TRUE
)
df_99_main_aoi$system_time_stamp
View(aoi)
View(df_timestamps)
response_window <- subset_by_window(data,
window_start_time = 479409458957,
window_end_time = 479433936951,
rezero = FALSE)
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = "Looking",
treat_non_aoi_looks_as_missing = TRUE
)
response_window <- subset_by_window(data,
window_start_time = 479409458957,
window_end_time = 479433936951,
rezero = FALSE)
table(data$Looks)
df_99_main_aoi$Looks
table(df_99_main_aoi$Looks)
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = "Looking",
treat_non_aoi_looks_as_missing = TRUE
)
df_99_main$Trackloss_column <- as.factor(ifelse(df_99_main$L_valid == '1' & df_99_main$R_valid == '1', TRUE,
ifelse(df_99_main$L_valid == '0' & df_99_main$R_valid == '1', FALSE,
ifelse(df_99_main$L_valid == '1' & df_99_main$R_valid == '0', FALSE,
ifelse(df_99_main$L_valid == '0' & df_99_main$R_valid == '0', FALSE, 'Error')))))
df_99_main_aoi$Trackloss_column <- as.factor(ifelse(df_99_main_aoi$L_valid == '1' & df_99_main_aoi$R_valid == '1', TRUE,
ifelse(df_99_main_aoi$L_valid == '0' & df_99_main_aoi$R_valid == '1', FALSE,
ifelse(df_99_main_aoi$L_valid == '1' & df_99_main_aoi$R_valid == '0', FALSE,
ifelse(df_99_main_aoi$L_valid == '0' & df_99_main_aoi$R_valid == '0', FALSE, 'Error')))))
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = "Looking",
treat_non_aoi_looks_as_missing = TRUE
)
make_time_sequence_data(df_99_main_aoi, 30000, aois = "Look",
predictor_columns = NULL, other_dv_columns = NULL, summarize_by = NULL)
data("word_recognition")
data
str(data)
data <- data("word_recognition")
str(data)
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = "Looking",
treat_non_aoi_looks_as_missing = TRUE
)
df_99_main_aoi$Trackloss_column <- as.factor(ifelse(df_99_main_aoi$L_valid == '1' & df_99_main_aoi$R_valid == '1', TRUE,
ifelse(df_99_main_aoi$L_valid == '0' & df_99_main_aoi$R_valid == '1', FALSE,
ifelse(df_99_main_aoi$L_valid == '1' & df_99_main_aoi$R_valid == '0', FALSE,
ifelse(df_99_main_aoi$L_valid == '0' & df_99_main_aoi$R_valid == '0', FALSE, 'Error')))))
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = "Looking",
treat_non_aoi_looks_as_missing = TRUE
)
df_99_main_aoi$Trackloss_column <- ifelse(df_99_main_aoi$L_valid == '1' & df_99_main_aoi$R_valid == '1', TRUE,
ifelse(df_99_main_aoi$L_valid == '0' & df_99_main_aoi$R_valid == '1', FALSE,
ifelse(df_99_main_aoi$L_valid == '1' & df_99_main_aoi$R_valid == '0', FALSE,
ifelse(df_99_main_aoi$L_valid == '0' & df_99_main_aoi$R_valid == '0', FALSE, 'Error'))))
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = "Looking",
treat_non_aoi_looks_as_missing = TRUE
)
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Looking"),
treat_non_aoi_looks_as_missing = TRUE
)
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Trial_description"),
treat_non_aoi_looks_as_missing = TRUE
)
df_99_main_aoi$Trackloss_column <- ifelse(df_99_main_aoi$L_valid == '1' & df_99_main_aoi$R_valid == '1', FALSE,
ifelse(df_99_main_aoi$L_valid == '0' & df_99_main_aoi$R_valid == '1', TRUE,
ifelse(df_99_main_aoi$L_valid == '1' & df_99_main_aoi$R_valid == '0', TRUE,
ifelse(df_99_main_aoi$L_valid == '0' & df_99_main_aoi$R_valid == '0', TRUE, 'Error'))))
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Looks"),
treat_non_aoi_looks_as_missing = TRUE
)
View(data)
subset_by_window(data, window_start_time = 0, rezero = TRUE,
remove = FALSE)
subset <- subset_by_window(data, window_start_time = 0, rezero = TRUE,
remove = FALSE)
View(subset)
response_window <- subset_by_window(data, window_start_time = 0, rezero = TRUE,
remove = FALSE)
response_window <- subset_by_window(data, window_start_time = 0, rezero = TRUE, remove = FALSE)
View(response_window)
response_window$system_time_stamp - 479331004389
response_window$system_time_stamp <- response_window$system_time_stamp - 479331004389
response_window_agg_by_sub <- make_time_window_data(data, aois = "Looking", summarize_by = "subjectID")
response_window_agg_by_sub <- make_time_window_data(data, aois = 'Looking', summarize_by = "subjectID")
response_window_agg_by_sub <- make_time_window_data(data, aois = 'Looks', summarize_by = "subjectID")
View(response_window_agg_by_sub)
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Looks", "NoLooks"),
treat_non_aoi_looks_as_missing = TRUE
)
df_99_main_aoi <- add_aoi(df_99_main, aoi_dataframe = aoi, 'X', 'Y', aoi_name="Looks", x_min_col = "X_min",
x_max_col = "X_max", y_min_col = "Y_min", y_max_col = "Y_max")
View(df_99_main_aoi)
df_99_main$Trial_description <- as.character(df_99_main$Trial_description)
aoi <- read.csv('~/Documents/Github/MannerPathPriming-2ET/Analysis/aoi.csv', header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
aoi <- na.omit(aoi)
df_99_main_aoi <- add_aoi(df_99_main, aoi_dataframe = aoi, 'X', 'Y', aoi_name="Looks", x_min_col = "X_min",
x_max_col = "X_max", y_min_col = "Y_min", y_max_col = "Y_max")
View(df_99_main_aoi)
df_99_main_aoi <- na.omit(df_99_main_aoi)
df_99_main_aoi$Trackloss_column <- ifelse(df_99_main_aoi$L_valid == '1' & df_99_main_aoi$R_valid == '1', FALSE,
ifelse(df_99_main_aoi$L_valid == '0' & df_99_main_aoi$R_valid == '1', TRUE,
ifelse(df_99_main_aoi$L_valid == '1' & df_99_main_aoi$R_valid == '0', TRUE,
ifelse(df_99_main_aoi$L_valid == '0' & df_99_main_aoi$R_valid == '0', TRUE, 'Error'))))
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Looks", "NoLooks"),
treat_non_aoi_looks_as_missing = TRUE
)
table(df_99_main_aoi$Looks)
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Looks", "NoLooks"),
treat_non_aoi_looks_as_missing = TRUE
)
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = "Looks",
treat_non_aoi_looks_as_missing = TRUE
)
response_window$system_time_stamp <- response_window$system_time_stamp - 479331004389
response_window$system_time_stamp <- response_window$system_time_stamp - 479331004389
response_window$system_time_stamp <- response_window$system_time_stamp - 479331004389
response_window_agg_by_sub <- make_time_window_data(data, aois = 'Looks', summarize_by = "subjectID")
View(response_window_agg_by_sub)
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Looks", "NoLooks"),
treat_non_aoi_looks_as_missing = TRUE
)
df_99_main_aoi$NoLooks <- ifelse(df_99_main_aoi$Looks == TRUE, FALSE,
ifelse(df_99_main_aoi$Looks == FALSE, TRUE, ERROR))
df_99_main_aoi$Trackloss_column <- ifelse(df_99_main_aoi$L_valid == '1' & df_99_main_aoi$R_valid == '1', FALSE,
ifelse(df_99_main_aoi$L_valid == '0' & df_99_main_aoi$R_valid == '1', TRUE,
ifelse(df_99_main_aoi$L_valid == '1' & df_99_main_aoi$R_valid == '0', TRUE,
ifelse(df_99_main_aoi$L_valid == '0' & df_99_main_aoi$R_valid == '0', TRUE, 'Error'))))
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Looks", "NoLooks"),
treat_non_aoi_looks_as_missing = TRUE
)
df_99_main_aoi$NoLooks <- ifelse(df_99_main_aoi$Looks == TRUE, FALSE,
ifelse(df_99_main_aoi$Looks == FALSE, TRUE, ERROR))
df_99_main_aoi$NoLooks <- ifelse(df_99_main_aoi$Looks == TRUE, FALSE,
ifelse(df_99_main_aoi$Looks == FALSE, TRUE, 'ERROR'))
df_99_main_aoi$Trackloss_column <- ifelse(df_99_main_aoi$L_valid == '1' & df_99_main_aoi$R_valid == '1', FALSE,
ifelse(df_99_main_aoi$L_valid == '0' & df_99_main_aoi$R_valid == '1', TRUE,
ifelse(df_99_main_aoi$L_valid == '1' & df_99_main_aoi$R_valid == '0', TRUE,
ifelse(df_99_main_aoi$L_valid == '0' & df_99_main_aoi$R_valid == '0', TRUE, 'Error'))))
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Looks", "NoLooks"),
treat_non_aoi_looks_as_missing = TRUE
)
df_99_main_aoi$NoLooks <- ifelse(df_99_main_aoi$Looks == TRUE, FALSE,
ifelse(df_99_main_aoi$Looks == FALSE, TRUE, 'Errpr'))
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Looks", "NoLooks"),
treat_non_aoi_looks_as_missing = TRUE
)
str(df_99_main_aoi$Looks)
str(df_99_main_aoi$NoLooks)
eval(parse(text = df_99_main_aoi$NoLooks))
eval(parse(text =FALSE))
df_99_main_aoi$NoLooks <- ifelse(df_99_main_aoi$Looks == TRUE, eval(parse(text =FALSE)),
ifelse(df_99_main_aoi$Looks == FALSE, eval(parse(text = TRUE)), 'Errpr'))
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Looks", "NoLooks"),
treat_non_aoi_looks_as_missing = TRUE
)
df_99_main_aoi$NoLooks
is.logical(df_99_main_aoi$NoLooks)
df_99_main_aoi$NoLooks <- ifelse(df_99_main_aoi$Looks == TRUE, as.logical(FALSE),
ifelse(df_99_main_aoi$Looks == FALSE, as.logical(TRUE), 'Error'))
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Looks", "NoLooks"),
treat_non_aoi_looks_as_missing = TRUE
)
df_99_main_aoi$NoLooks <- ifelse(df_99_main_aoi$Looks == TRUE, FALSE,
ifelse(df_99_main_aoi$Looks == FALSE, TRUE, 'Error'))
df_99_main_aoi$NoLooks <- as.logical(df_99_main_aoi$NoLooks)
data <- make_eyetrackingr_data(df_99_main_aoi,
participant_column = "subjectID",
trial_column = "Trial",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Looks", "NoLooks"),
treat_non_aoi_looks_as_missing = TRUE
)
response_window$system_time_stamp <- response_window$system_time_stamp - 479331004389
response_window_agg_by_sub <- make_time_window_data(data, aois = 'Looks', summarize_by = "subjectID")
