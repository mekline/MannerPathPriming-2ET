install.packages("devtools")
install.packages("devtools")
library("eyetrackingR")
library("plyr")
library("dplyr")
library("lme4")
library("ggplot2")
library("Matrix")
setwd('/Users/crystallee/Documents/Github/MannerPathPriming-2ET/Data/Melissa_111')
path = '~/Documents/Github/MannerPathPriming-2ET/Data/Melissa_111'
out.file<-""
dat_table <- read.delim("~/Documents/Github/MannerPathPriming-2ET/Data/MPPCREATION_Melissa_111.dat",
header=TRUE, sep=",")
file.names <- dir(path, pattern ="gaze_MPPCREATION_Melissa_111_All_of_Main_trial_.*.csv")
df_111_main <- data.frame(Date=as.Date(character()),
File=character(),
User=character(),
stringsAsFactors=FALSE)
for(file in file.names){
temp <- read.csv(file, header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
df_111_main <-rbind(df_111_main, temp)
}
colnames(df_111_main)[which(names(df_111_main) == "description")] <- "trialNo"
df_111_main$L_valid <- as.factor(df_111_main$L_valid)
df_111_main$R_valid <- as.factor(df_111_main$R_valid)
df_111_main$system_time_stamp <- df_111_main$system_time_stamp - 1500000000000000
df_111_main$Trackloss_column <- as.factor(ifelse(df_111_main$L_valid == '1' & df_111_main$R_valid == '1', TRUE,
ifelse(df_111_main$L_valid == '0' & df_111_main$R_valid == '1', FALSE,
ifelse(df_111_main$L_valid == '1' & df_111_main$R_valid == '0', FALSE,
ifelse(df_111_main$L_valid == '0' & df_111_main$R_valid == '0', FALSE, 'Error')))))
df_timestamps <- read.csv("~/Documents/Github/MannerPathPriming-2ET/Data/Melissa_111/timestamps_MPPCREATION_Melissa_111.csv", header = TRUE, stringsAsFactors=FALSE, fileEncoding = "latin1")
df_timestamps$subjectID <- as.factor(df_timestamps$subjectID)
df_timestamps$system_time_stamp <- df_timestamps[,2] - 1500000000000000
trial_time <- function(x) {
f = df_timestamps$system_time_stamp
a = x
maxless <- max(f[f <= a])
# find out which value that is
y = which(f == maxless)
z = as.character(df_timestamps$point_description[y])
#x <- cbind(x, newColumn = z2)
return(z)
}
a <- lapply(df_111_main$system_time_stamp, trial_time)
df_111_main$Trial_description <- a
df_111_main$X <- rowMeans(subset(df_111_main, select = c(6, 9)), na.rm = TRUE)
df_111_main$Y <- rowMeans(subset(df_111_main, select = c(7, 10)), na.rm = TRUE)
df_111_main$trialNo <- as.factor(ifelse(df_111_main$trialNo == "All_of_Main_trial_5", "5",
ifelse(df_111_main$trialNo == "All_of_Main_trial_6", "6",
ifelse(df_111_main$trialNo == "All_of_Main_trial_7", "7",
ifelse(df_111_main$trialNo == "All_of_Main_trial_8", "8", "Error")))))
df_111_main <- merge(df_111_main, dat_table, by="trialNo")
subjID_aoi <- read.csv("~/Documents/Github/MannerPathPriming-2ET/Analysis/subjID_aoi.csv", header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
subjID_aoi$trialNo <- as.factor(subjID_aoi$trialNo)
df_111_main_aoi <- add_aoi(df_111_main, aoi_dataframe = subjID_aoi, 'X', 'Y', aoi_name="Correct", x_min_col = "X_min",
x_max_col = "X_max", y_min_col = "Y_min", y_max_col = "Y_max")
df_111_main_aoi$Incorrect <- ifelse(df_111_main_aoi$Correct == TRUE, FALSE,
ifelse(df_111_main_aoi$Correct == FALSE, TRUE, 'Error'))
df_111_main_aoi$Incorrect <- as.logical(df_111_main_aoi$Incorrect)
df_111_main_aoi$Trackloss_column <- ifelse(df_111_main_aoi$L_valid == '1' & df_111_main_aoi$R_valid == '1', FALSE,
ifelse(df_111_main_aoi$L_valid == '0' & df_111_main_aoi$R_valid == '1', TRUE,
ifelse(df_111_main_aoi$L_valid == '1' & df_111_main_aoi$R_valid == '0', TRUE,
ifelse(df_111_main_aoi$L_valid == '0' & df_111_main_aoi$R_valid == '0', TRUE, 'Error'))))
df_111_main_aoi$Trackloss_column <- as.logical(df_111_main_aoi$Trackloss_column)
data <- make_eyetrackingr_data(df_111_main_aoi,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Correct", "Incorrect"),
treat_non_aoi_looks_as_missing = TRUE
)
trial5 <- subset(data, trialNo == "5")
data_summary <- describe_data(trial5,
describe_column='Correct', group_columns=c('subjectID'))
response_window_agg_by_sub <- make_time_window_data(trial5, aois = c("Correct", "Incorrect"), summarize_by = "subjectID")
ggplot(data=response_window_agg_by_sub, aes(x=AOI, y=Prop)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
ylab("Proportion of looks to screen") +
ggtitle("Path Condition") +
theme(axis.title = element_text(size=14),
axis.text.x  = element_text(size=12),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=14)) +
scale_x_discrete(breaks=c("Correct", "Incorrect"),
labels=c("Path", "Manner"))
ggplot(data=response_window_agg_by_sub, aes(x=AOI, y=Prop)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
ylab("Proportion of looks to screen") +
ggtitle("Path Condition") +
theme(axis.title = element_text(size=14),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
strip.text.x = element_text(size=14)) +
scale_x_discrete(breaks=c("Correct", "Incorrect"),
labels=c("Path", "Manner"))
ggplot(data=response_window_agg_by_sub, aes(x=AOI, y=Prop)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
ylab("Proportion of looks to screen") +
ggtitle("Path Condition") +
theme(axis.title = element_text(size=20),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
strip.text.x = element_text(size=14)) +
scale_x_discrete(breaks=c("Correct", "Incorrect"),
labels=c("Path", "Manner"))
ggplot(data=response_window_agg_by_sub, aes(x=AOI, y=Prop)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
ylab("Proportion of looks to screen") +
ggtitle("Path Condition") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold")) +
scale_x_discrete(breaks=c("Correct", "Incorrect"),
labels=c("Path", "Manner"))
ggsave("trial5_melissa_path.png")
file.names <- dir(path, pattern ="gaze_MPPCREATION_Melissa_111_All_of_Extend_trial_.*.csv")
df_111_extend <- data.frame(Date=as.Date(character()),
File=character(),
User=character(),
stringsAsFactors=FALSE)
for(file in file.names){
temp <- read.csv(file, header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
df_111_extend <-rbind(df_111_extend, temp)
}
colnames(df_111_extend)[which(names(df_111_extend) == "description")] <- "trialNo"
df_111_extend$L_valid <- as.factor(df_111_extend$L_valid)
df_111_extend$R_valid <- as.factor(df_111_extend$R_valid)
df_111_extend$system_time_stamp <- df_111_extend$system_time_stamp - 1500000000000000
df_111_extend$Trackloss_column <- as.factor(ifelse(df_111_extend$L_valid == '1' & df_111_extend$R_valid == '1', TRUE,
ifelse(df_111_extend$L_valid == '0' & df_111_extend$R_valid == '1', FALSE,
ifelse(df_111_extend$L_valid == '1' & df_111_extend$R_valid == '0', FALSE,
ifelse(df_111_extend$L_valid == '0' & df_111_extend$R_valid == '0', FALSE, 'Error')))))
a <- lapply(df_111_extend$system_time_stamp, trial_time)
df_111_extend$Trial_description <- a
df_111_extend$X <- rowMeans(subset(df_111_extend, select = c(6, 9)), na.rm = TRUE)
df_111_extend$Y <- rowMeans(subset(df_111_extend, select = c(7, 10)), na.rm = TRUE)
df_111_extend$trialNo <- as.factor(ifelse(df_111_extend$trialNo == "All_of_Extend_trial_5", "13",
ifelse(df_111_extend$trialNo == "All_of_Extend_trial_6", "14",
ifelse(df_111_extend$trialNo == "All_of_Extend_trial_7", "7",
ifelse(df_111_extend$trialNo == "All_of_Extend_trial_8", "8",
ifelse(df_111_extend$trialNo == "All_of_Extend_trial_1", "9",
ifelse(df_111_extend$trialNo == "All_of_Extend_trial_2", "10",
ifelse(df_111_extend$trialNo == "All_of_Extend_trial_3", "11",
ifelse(df_111_extend$trialNo == "All_of_Extend_trial_4", "12", "Error")))))))))
df_111_extend <- merge(df_111_extend, dat_table, by="trialNo")
subjID_aoi_extend <- read.csv("~/Documents/Github/MannerPathPriming-2ET/Analysis/subjID_aoi_extend.csv", header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
subjID_aoi_extend$trialNo <- as.factor(subjID_aoi_extend$trialNo)
df_111_extend_aoi <- add_aoi(df_111_extend, aoi_dataframe = subjID_aoi_extend, 'X', 'Y', aoi_name="Correct", x_min_col = "X_min",
x_max_col = "X_max", y_min_col = "Y_min", y_max_col = "Y_max")
df_111_extend_aoi$Incorrect <- ifelse(df_111_extend_aoi$Correct == TRUE, FALSE,
ifelse(df_111_extend_aoi$Correct == FALSE, TRUE, 'Error'))
df_111_extend_aoi$Incorrect <- as.logical(df_111_extend_aoi$Incorrect)
df_111_extend_aoi$Trackloss_column <- ifelse(df_111_extend_aoi$L_valid == '1' & df_111_extend_aoi$R_valid == '1', FALSE,
ifelse(df_111_extend_aoi$L_valid == '0' & df_111_extend_aoi$R_valid == '1', TRUE,
ifelse(df_111_extend_aoi$L_valid == '1' & df_111_extend_aoi$R_valid == '0', TRUE,
ifelse(df_111_extend_aoi$L_valid == '0' & df_111_extend_aoi$R_valid == '0', TRUE, 'Error'))))
df_111_extend_aoi$Trackloss_column <- as.logical(df_111_extend_aoi$Trackloss_column)
data <- make_eyetrackingr_data(df_111_extend_aoi,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Correct", "Incorrect"),
treat_non_aoi_looks_as_missing = TRUE
)
data_summary <- describe_data(data,
describe_column='Correct', group_columns=c('subjectID'))
response_window_agg_by_sub <- make_time_window_data(data, aois = c("Correct", "Incorrect"), summarize_by = "subjectID")
ggplot(data=response_window_agg_by_sub, aes(x=AOI, y=Prop)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
ylab("Proportion of looks to screen") +
ggtitle("Path Condition") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold")) +
scale_x_discrete(breaks=c("Correct", "Incorrect"),
labels=c("Outcome", "Action"))
ggsave("extendtrials_melissa_path.png")
file.names <- dir(path, pattern ="gaze_MPPCREATION_Melissa_111_All_of_Practice_.*.csv")
df_111_practice <- data.frame(Date=as.Date(character()),
File=character(),
User=character(),
stringsAsFactors=FALSE)
for(file in file.names){
temp <- read.csv(file, header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
df_111_practice <-rbind(df_111_practice, temp)
}
colnames(df_111_practice)[which(names(df_111_practice) == "description")] <- "Trial"
df_111_practice$L_valid <- as.factor(df_111_practice$L_valid)
df_111_practice$R_valid <- as.factor(df_111_practice$R_valid)
df_111_practice$system_time_stamp <- df_111_practice$system_time_stamp - 1500000000000000
df_111_practice$Trackloss_column <- as.factor(ifelse(df_111_practice$L_valid == '1' & df_111_practice$R_valid == '1', TRUE,
ifelse(df_111_practice$L_valid == '0' & df_111_practice$R_valid == '1', FALSE,
ifelse(df_111_practice$L_valid == '1' & df_111_practice$R_valid == '0', FALSE,
ifelse(df_111_practice$L_valid == '0' & df_111_practice$R_valid == '0', FALSE, 'Error')))))
View(df_111_practice)
a <- lapply(df_111_practice$system_time_stamp, trial_time)
file.names <- dir(path, pattern ="gaze_MPPCREATION_Melissa_111_All_of_Practice_.*.csv")
df_111_practice <- data.frame(Date=as.Date(character()),
File=character(),
User=character(),
stringsAsFactors=FALSE)
for(file in file.names){
temp <- read.csv(file, header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
df_111_practice <-rbind(df_111_practice, temp)
}
dat_table <- read.delim("~/Documents/Github/MannerPathPriming-2ET/Data/MPPCREATION_Melissa_111.dat",
header=TRUE, sep=",")
colnames(df_111_practice)[which(names(df_111_practice) == "description")] <- "Trial"
df_111_practice$L_valid <- as.factor(df_111_practice$L_valid)
df_111_practice$R_valid <- as.factor(df_111_practice$R_valid)
df_111_practice$system_time_stamp <- df_111_practice$system_time_stamp - 1500000000000000
df_111_practice$Trackloss_column <- ifelse(df_111_practice$L_valid == '1' & df_111_practice$R_valid == '1', FALSE,
ifelse(df_111_practice$L_valid == '0' & df_111_practice$R_valid == '1', TRUE,
ifelse(df_111_practice$L_valid == '1' & df_111_practice$R_valid == '0', TRUE,
ifelse(df_111_practice$L_valid == '0' & df_111_practice$R_valid == '0', TRUE, 'Error'))))
df_111_practice$Trackloss_column <- as.logical(df_111_practice$Trackloss_column)
df_timestamps <- read.csv("~/Documents/Github/MannerPathPriming-2ET/Data/Melissa_111/timestamps_MPPCREATION_Melissa_111.csv", header = TRUE, stringsAsFactors=FALSE, fileEncoding = "latin1")
df_timestamps$subjectID <- as.factor(df_timestamps$subjectID)
df_timestamps$system_time_stamp <- df_timestamps[,2] - 1500000000000000
colnames(df_111_practice)[which(names(df_111_practice) == "description")] <- "trialNo"
df_111_practice$L_valid <- as.factor(df_111_practice$L_valid)
df_111_practice$R_valid <- as.factor(df_111_practice$R_valid)
df_111_practice$system_time_stamp <- df_111_practice$system_time_stamp - 1500000000000000
df_111_practice$Trackloss_column <- ifelse(df_111_practice$L_valid == '1' & df_111_practice$R_valid == '1', FALSE,
ifelse(df_111_practice$L_valid == '0' & df_111_practice$R_valid == '1', TRUE,
ifelse(df_111_practice$L_valid == '1' & df_111_practice$R_valid == '0', TRUE,
ifelse(df_111_practice$L_valid == '0' & df_111_practice$R_valid == '0', TRUE, 'Error'))))
