install.packages("devtools")
library("eyetrackingR")
library("plyr")
library("dplyr")
library("lme4")
library("ggplot2")
library("Matrix")
install.packages("devtools")
library("eyetrackingR")
library("eyetrackingR")
library("plyr")
library("dplyr")
library("lme4")
library("ggplot2")
library("Matrix")
setwd('/Users/crystallee/Documents/Github/MannerPathPriming-2ET/Data/Melissa_111')
path = '~/Documents/Github/MannerPathPriming-2ET/Data/Melissa_111'
out.file<-""
file.names <- dir(path, pattern ="gaze_MPPCREATION_Melissa_111_All_of_Main_trial_.*.csv")
df_111_main <- data.frame(Date=as.Date(character()),
File=character(),
User=character(),
stringsAsFactors=FALSE)
for(file in file.names){
temp <- read.csv(file, header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
df_111_main <-rbind(df_111_main, temp)
}
colnames(df_111_main)[which(names(df_111_main) == "description")] <- "trialNo"
df_111_main$L_valid <- as.factor(df_111_main$L_valid)
df_111_main$R_valid <- as.factor(df_111_main$R_valid)
df_111_main$system_time_stamp <- df_111_main$system_time_stamp - 1500000000000000
df_111_main$Trackloss_column <- as.factor(ifelse(df_111_main$L_valid == '1' & df_111_main$R_valid == '1', TRUE,
ifelse(df_111_main$L_valid == '0' & df_111_main$R_valid == '1', FALSE,
ifelse(df_111_main$L_valid == '1' & df_111_main$R_valid == '0', FALSE,
ifelse(df_111_main$L_valid == '0' & df_111_main$R_valid == '0', FALSE, 'Error')))))
df_timestamps <- read.csv("~/Documents/Github/MannerPathPriming-2ET/Data/Melissa_111/timestamps_MPPCREATION_Melissa_111.csv", header = TRUE, stringsAsFactors=FALSE, fileEncoding = "latin1")
df_timestamps$subjectID <- as.factor(df_timestamps$subjectID)
df_timestamps$system_time_stamp <- df_timestamps[,2] - 1500000000000000
a <- lapply(df_111_main$system_time_stamp, trial_time)
trial_time <- function(x) {
f = df_timestamps$system_time_stamp
a = x
maxless <- max(f[f <= a])
# find out which value that is
y = which(f == maxless)
z = as.character(df_timestamps$point_description[y])
#x <- cbind(x, newColumn = z2)
return(z)
}
a <- lapply(df_111_main$system_time_stamp, trial_time)
df_111_main$Trial_description <- a
df_111_main$X <- rowMeans(subset(df_111_main, select = c(6, 9)), na.rm = TRUE)
df_111_main$Y <- rowMeans(subset(df_111_main, select = c(7, 10)), na.rm = TRUE)
df_111_main$trialNo <- as.factor(ifelse(df_111_main$trialNo == "All_of_Main_trial_5", "5",
ifelse(df_111_main$trialNo == "All_of_Main_trial_6", "6",
ifelse(df_111_main$trialNo == "All_of_Main_trial_7", "7",
ifelse(df_111_main$trialNo == "All_of_Main_trial_8", "8", "Error")))))
df_111_main <- merge(df_111_main, dat_table, by="trialNo")
View(df_111_main)
subjID_aoi <- read.csv("~/Documents/Github/MannerPathPriming-2ET/Analysis/subjID_aoi.csv", header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
View(subjID_aoi)
dat_table <- read.delim("~/Documents/Github/MannerPathPriming-2ET/Data/MPPCREATION_Melissa_111.dat",
header=TRUE, sep=",")
df_111_main <- merge(df_111_main, dat_table, by="trialNo")
df_111_main %>%
mutate(Correct = (Condition == 'Path' & pathSideTest == "L" & X >= 0.25 & X<= .605))
df_111_main %>%
mutate(Correct = (Condition == 'Path' & pathSideTest == "L" & X >= 0.25 & X<= .605)) %>%
###declaring my real function####
trial_time <- function(x) {
f = df_timestamps$system_time_stamp
a = x
maxless <- max(f[f <= a])
# find out which value that is
y = which(f == maxless)
z = as.character(df_timestamps$point_description[y])
z1 = as.character(df_timestamps$point_description[y+1])
z2 <- paste(z1, z, sep=",")
#x <- cbind(x, newColumn = z2)
return(z2)
}
df_111_main %>%
mutate(Correct = (Condition == 'Path' & pathSideTest == "L" & X >= 0.25 & X <= .605)) %>%
###declaring my real function####
trial_time <- function(x) {
f = df_timestamps$system_time_stamp
a = x
maxless <- max(f[f <= a])
# find out which value that is
y = which(f == maxless)
z = as.character(df_timestamps$point_description[y])
z1 = as.character(df_timestamps$point_description[y+1])
z2 <- paste(z1, z, sep=",")
#x <- cbind(x, newColumn = z2)
return(z2)
}
df_111_main %>%
mutate(Correct = (Condition == 'Path' & pathSideTest == "L" & X >= 0.25 & X <= .605)) %>%
###declaring my real function####
trial_time <- function(x) {
f = df_timestamps$system_time_stamp
a = x
maxless <- max(f[f <= a])
# find out which value that is
y = which(f == maxless)
z = as.character(df_timestamps$point_description[y])
z1 = as.character(df_timestamps$point_description[y+1])
z2 <- paste(z1, z, sep=",")
#x <- cbind(x, newColumn = z2)
return(z2)
}
df_111_main %>%
mutate(Correct = (Condition == 'Path' & pathSideTest == "L" & X >= 0.25 & X <= .605))
head(df_111_main)
df_111_main %>%
group_by(Condition, subjID, trialNo) %>%
mutate(Correct = (Condition == 'Path' & pathSideTest == "L" & X >= 0.25 & X <= .605))
df_111_main %>%
group_by(Condition, subjectID, trialNo) %>%
mutate(Correct = (Condition == 'Path' & pathSideTest == "L" & X >= 0.25 & X <= .605))
df_111_main$Correct
df_111_main %>%
group_by(Condition, subjectID, trialNo) %>%
mutate(Correct = ifelse(Condition == 'Path' & pathSideTest == "L" & X %in% 0.25:.605, 'Correct'))
df_111_main %>%
group_by(Condition, subjectID, trialNo) %>%
mutate(Correct = ifelse(Condition == 'Path' & pathSideTest == "L" & X %in% 0.25:.605, 'Correct', 'Error'))
mutate(df_111_main, '99' = ifelse(Condition == "Path", "Pass", "Fail"))
df_111_main %>%
group_by(Condition, subjectID, trialNo) %>%
mutate(Correct = ifelse(Condition == 'Path' & pathSideTest == "L" & X %in% 0.25:.605, 'Correct', 'Error')) -> df_111_main
str(df_111_main$Correct)
str(df_111_main$X)
x = 2
x
str(x)
str(.25)
df_111_main %>%
group_by(Condition, subjectID, trialNo) %>%
mutate(Correct = ifelse(Condition == 'Path' & pathSideTest == "L" & X %in% 0.25:0.605, 'Correct', 'Error')) -> df_111_main
df_111_main %>%
group_by(Condition, subjectID, trialNo) %>%
mutate(Correct = ifelse(Condition == 'Path' & pathSideBias == "R" & X %in% 0.25:0.605, 1, 'Error')) -> df_111_main
df_111_main %>%
group_by(Condition, subjectID, trialNo) %>%
mutate(Correct = ifelse(Condition == 'Path' & pathSideBias == "R" & X < 0.605, 1, 'Error')) -> df_111_main
df_111_main %>%
group_by(Condition, subjectID, trialNo) %>%
mutate(Correct = ifelse(Condition == 'Path' & pathSideBias == "R" & X < 0.605 & X > 0.25, 1, 'Error')) -> df_111_main
df_111_main %>%
group_by(Condition, subjectID, trialNo) %>%
mutate(Correct = ifelse(Condition == 'Path' & pathSideBias == "R" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, 1, 'Error')) -> df_111_main
df_111_main %>%
group_by(Condition, subjectID, trialNo) %>%
mutate(correctBias = ifelse(Condition == 'Path' & pathSideBias == "L" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, 1,
ifelse(Condition == 'Path' & pathSideBias == "R" & X < 1.250 & X > 0.67 & Y > 0.1963 & Y < 0.6313, 1,
ifelse(Condition == 'Manner' & mannerSideBias == "L" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, 1,
ifelse(Condition == 'Manner' & mannerSideBias == "R" & X < 1.250 & X > 0.67 & Y > 0.1963 & Y < 0.6313, 1, 0)))))
df_111_main %>%
group_by(Condition, subjectID, trialNo) %>%
mutate(correctBias = ifelse(Condition == 'Path' & pathSideBias == "L" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, 1,
ifelse(Condition == 'Path' & pathSideBias == "R" & X < 1.250 & X > 0.67 & Y > 0.1963 & Y < 0.6313, 1,
ifelse(Condition == 'Manner' & mannerSideBias == "L" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, 1,
ifelse(Condition == 'Manner' & mannerSideBias == "R" & X < 1.250 & X > 0.67 & Y > 0.1963 & Y < 0.6313, 1, 0))))) %>%
mutate(correctTest = ifelse(Condition == 'Path' & pathSideTest == "L" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, 1,
ifelse(Condition == 'Path' & pathSideTest == "R" & X < 1.250 & X > 0.67 & Y > 0.1963 & Y < 0.6313, 1,
ifelse(Condition == 'Manner' & mannerSideTest == "L" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, 1,
ifelse(Condition == 'Manner' & mannerSideTest == "R" & X < 1.250 & X > 0.67 & Y > 0.1963 & Y < 0.6313, 1, 0))))) -> df_111_main
file.names <- dir(path, pattern ="gaze_MPPCREATION_Melissa_111_All_of_Main_trial_.*.csv")
df_111_main <- data.frame(Date=as.Date(character()),
File=character(),
User=character(),
stringsAsFactors=FALSE)
for(file in file.names){
temp <- read.csv(file, header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
df_111_main <-rbind(df_111_main, temp)
}
colnames(df_111_main)[which(names(df_111_main) == "description")] <- "trialNo"
df_111_main$L_valid <- as.factor(df_111_main$L_valid)
df_111_main$R_valid <- as.factor(df_111_main$R_valid)
df_111_main$system_time_stamp <- df_111_main$system_time_stamp - 1500000000000000
df_111_main$Trackloss_column <- as.factor(ifelse(df_111_main$L_valid == '1' & df_111_main$R_valid == '1', TRUE,
ifelse(df_111_main$L_valid == '0' & df_111_main$R_valid == '1', FALSE,
ifelse(df_111_main$L_valid == '1' & df_111_main$R_valid == '0', FALSE,
ifelse(df_111_main$L_valid == '0' & df_111_main$R_valid == '0', FALSE, 'Error')))))
df_timestamps <- read.csv("~/Documents/Github/MannerPathPriming-2ET/Data/Melissa_111/timestamps_MPPCREATION_Melissa_111.csv", header = TRUE, stringsAsFactors=FALSE, fileEncoding = "latin1")
df_timestamps$subjectID <- as.factor(df_timestamps$subjectID)
df_timestamps$system_time_stamp <- df_timestamps[,2] - 1500000000000000
a <- lapply(df_111_main$system_time_stamp, trial_time)
df_111_main$Trial_description <- a
df_111_main$X <- rowMeans(subset(df_111_main, select = c(6, 9)), na.rm = TRUE)
df_111_main$Y <- rowMeans(subset(df_111_main, select = c(7, 10)), na.rm = TRUE)
df_111_main$trialNo <- as.factor(ifelse(df_111_main$trialNo == "All_of_Main_trial_5", "5",
ifelse(df_111_main$trialNo == "All_of_Main_trial_6", "6",
ifelse(df_111_main$trialNo == "All_of_Main_trial_7", "7",
ifelse(df_111_main$trialNo == "All_of_Main_trial_8", "8", "Error")))))
df_111_main_aoi$Trackloss_column <- as.logical(df_111_main_aoi$Trackloss_column)
df_111_main <- merge(df_111_main, dat_table, by="trialNo")
subjID_aoi <- read.csv("~/Documents/Github/MannerPathPriming-2ET/Analysis/subjID_aoi.csv", header = TRUE, stringsAsFactors=FALSE, fileEncoding="latin1")
df_111_main %>%
group_by(Condition, subjectID, trialNo) %>%
mutate(correctBias = ifelse(Condition == 'Path' & pathSideBias == "L" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, TRUE,
ifelse(Condition == 'Path' & pathSideBias == "R" & X < 1.250 & X > 0.67 & Y > 0.1963 & Y < 0.6313, TRUE,
ifelse(Condition == 'Manner' & mannerSideBias == "L" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, TRUE,
ifelse(Condition == 'Manner' & mannerSideBias == "R" & X < 1.250 & X > 0.67 & Y > 0.1963 & Y < 0.6313, TRUE, FALSE))))) %>%
mutate(correctTest = ifelse(Condition == 'Path' & pathSideTest == "L" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, TRUE,
ifelse(Condition == 'Path' & pathSideTest == "R" & X < 1.250 & X > 0.67 & Y > 0.1963 & Y < 0.6313, TRUE,
ifelse(Condition == 'Manner' & mannerSideTest == "L" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, TRUE,
ifelse(Condition == 'Manner' & mannerSideTest == "R" & X < 1.250 & X > 0.67 & Y > 0.1963 & Y < 0.6313, TRUE, FALSE))))) -> df_111_main
df_111_main_aoi$incorrectBias <- ifelse(df_111_main_aoi$correctBias == TRUE, FALSE,
ifelse(df_111_main_aoi$correctBias == FALSE, TRUE, 'Error'))
df_111_main %>%
group_by(Condition, subjectID, trialNo) %>%
mutate(correctBias = ifelse(Condition == 'Path' & pathSideBias == "L" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, TRUE,
ifelse(Condition == 'Path' & pathSideBias == "R" & X < 1.250 & X > 0.67 & Y > 0.1963 & Y < 0.6313, TRUE,
ifelse(Condition == 'Manner' & mannerSideBias == "L" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, TRUE,
ifelse(Condition == 'Manner' & mannerSideBias == "R" & X < 1.250 & X > 0.67 & Y > 0.1963 & Y < 0.6313, TRUE, FALSE))))) %>%
mutate(correctTest = ifelse(Condition == 'Path' & pathSideTest == "L" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, TRUE,
ifelse(Condition == 'Path' & pathSideTest == "R" & X < 1.250 & X > 0.67 & Y > 0.1963 & Y < 0.6313, TRUE,
ifelse(Condition == 'Manner' & mannerSideTest == "L" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, TRUE,
ifelse(Condition == 'Manner' & mannerSideTest == "R" & X < 1.250 & X > 0.67 & Y > 0.1963 & Y < 0.6313, TRUE, FALSE))))) -> df_111_main_aoi
df_111_main_aoi$incorrectBias <- ifelse(df_111_main_aoi$correctBias == TRUE, FALSE,
ifelse(df_111_main_aoi$correctBias == FALSE, TRUE, 'Error'))
df_111_main_aoi$incorrectBias <- as.logical(df_111_main_aoi$incorrectBias)
df_111_main_aoi$incorrectTest <- ifelse(df_111_main_aoi$correctTest == TRUE, FALSE,
ifelse(df_111_main_aoi$correctTest == FALSE, TRUE, 'Error'))
df_111_main_aoi$incorrectTest <- as.logical(df_111_main_aoi$incorrectTest)
data <- make_eyetrackingr_data(df_111_main_aoi,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Correct", "Incorrect"),
treat_non_aoi_looks_as_missing = TRUE
)
data_summary <- describe_data(data,
describe_column='Correct', group_columns=c('subjectID'))
response_window_agg_by_sub <- make_time_window_data(data, aois = c("Correct", "Incorrect"), summarize_by = "subjectID")
data <- make_eyetrackingr_data(df_111_main_aoi,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Correct", "Incorrect"),
treat_non_aoi_looks_as_missing = TRUE
)
df_111_main_aoi$Trackloss_column <- as.logical(df_111_main_aoi$Trackloss_column)
data <- make_eyetrackingr_data(df_111_main_aoi,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("Correct", "Incorrect"),
treat_non_aoi_looks_as_missing = TRUE
)
data <- make_eyetrackingr_data(df_111_main_aoi,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("correctBias", "incorrectBias", "correctTest", "incorrectTest"),
treat_non_aoi_looks_as_missing = TRUE
)
response_window_agg_by_sub <- make_time_window_data(data, aois = c("Correct", "Incorrect"), summarize_by = "subjectID")
response_window_agg_by_sub <- make_time_window_data(data, aois = c("correctBias", "incorrectBias", "correctTest", "incorrectTest"), summarize_by = "subjectID")
View(response_window_agg_by_sub)
ggplot(data=response_window_agg_by_sub, aes(x=AOI, y=Prop)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
ylab("Proportion of looks to screen") +
ggtitle("Path Condition") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold")) +
scale_x_discrete(breaks=c("Correct", "Incorrect"),
labels=c("Path", "Manner"))
