load("D:/D; Documenten/Studies/ReMa Linguistics/Internship/Analysis/Workspace.RData")
View(df_practice_test)
View(df_timestamps)
load("D:/D; Documenten/Studies/ReMa Linguistics/Internship/Analysis/Workspace.RData")
View(df_data_table)
View(temp)
load("D:/D; Documenten/Studies/ReMa Linguistics/Internship/Analysis/Workspace_NoBias_Pilot2.RData")
load("D:/D; Documenten/Studies/ReMa Linguistics/Internship/Analysis/Workspace_NoBias_Pilot1.RData")
load("D:/D; Documenten/Studies/ReMa Linguistics/Internship/Analysis/Workspace_NoBias_Pilot2.RData")
library("eyetrackingR")
library("plyr")
library("dplyr")
library("lme4")
library("ggplot2")
library("Matrix")
library("stringr")
load("D:/D; Documenten/Studies/ReMa Linguistics/Internship/Analysis/Workspace_NoBias_Pilot2.RData")
library("eyetrackingR")
library("plyr")
library("dplyr")
library("lme4")
library("ggplot2")
library("Matrix")
library("stringr")
setwd('/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Data/PILOT 2')
ggplot(plottingmeandata, aes(x=TimeBin, y=meanProp, color = AOI)) +
facet_wrap(~subjectID) +
geom_line()
plottingmeandata <- response_time %>%
group_by(AOI, TimeBin) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(subjectID = 'Mean')
plottingtrialdata <- response_time %>%
group_by(AOI, TimeBin, trialNo) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE))
plottinginddata <- response_time %>%
group_by(subjectID, AOI, TimeBin) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE))
ggplot(plottingmeandata, aes(x=TimeBin, y=meanProp, color = AOI)) +
facet_wrap(~subjectID) +
geom_line()
data <- data %>%
group_by(subjectID, trialNo) %>%
mutate(Rank = dense_rank(system_time_stamp)) %>%
arrange(subjectID, trialNo, Rank)
data <- make_eyetrackingr_data(data,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookPractice", "lookNotPractice", "lookNotAOI"),
treat_non_aoi_looks_as_missing = FALSE
)
# rezero system time stamps, so that at every trial start, the system time stamp is 0
response_window <- subset_by_window(data, window_start_msg = 1, msg_col = "Rank", rezero= TRUE, remove= FALSE)
# aggregate across trials within subjects in time analysis (time bin size is 0.2 seconds)
response_time <- make_time_sequence_data(response_window, time_bin_size = 200000,
#predictor_columns = c("Condition"),
aois = c("lookPractice", "lookNotPractice", "lookNotAOI")
)
plottingmeandata <- response_time %>%
group_by(AOI, TimeBin) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(subjectID = 'Mean')
plottingtrialdata <- response_time %>%
group_by(AOI, TimeBin, trialNo) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE))
plottinginddata <- response_time %>%
group_by(subjectID, AOI, TimeBin) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE))
ggplot(plottingmeandata, aes(x=TimeBin, y=meanProp, color = AOI)) +
facet_wrap(~subjectID) +
geom_line()
data <- make_eyetrackingr_data(df_practice_test,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookPractice", "lookNotPractice", "lookNotAOI"),
treat_non_aoi_looks_as_missing = FALSE
)
data <- data %>%
group_by(subjectID, trialNo) %>%
mutate(Rank = dense_rank(system_time_stamp)) %>%
arrange(subjectID, trialNo, Rank)
data <- make_eyetrackingr_data(data,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookPractice", "lookNotPractice", "lookNotAOI"),
treat_non_aoi_looks_as_missing = FALSE
)
response_window <- subset_by_window(data, window_start_msg = 1, msg_col = "Rank", rezero= TRUE, remove= FALSE)
# aggregate across trials within subjects in time analysis (time bin size is 0.2 seconds)
response_time <- make_time_sequence_data(response_window, time_bin_size = 200000,
#predictor_columns = c("Condition"),
aois = c("lookPractice", "lookNotPractice", "lookNotAOI")
)
plottingmeandata <- response_time %>%
group_by(AOI, TimeBin) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(subjectID = 'Mean')
plottingtrialdata <- response_time %>%
group_by(AOI, TimeBin, trialNo) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE))
plottinginddata <- response_time %>%
group_by(subjectID, AOI, TimeBin) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE))
ggplot(plottingmeandata, aes(x=TimeBin, y=meanProp, color = AOI)) +
facet_wrap(~subjectID) +
geom_line()
ggplot(plottinginddata, aes(x=TimeBin, y=meanProp, color = AOI)) +
facet_wrap(~subjectID) +
geom_line()
ggplot(plottingtrialdata, aes(x=TimeBin, y=meanProp, color = AOI)) +
facet_wrap(~trialNo) +
geom_line()
tl_practice_analysis <- trackloss_analysis(data)
View(tl_practice_analysis)
ggplot(tl_practice_
ggplot(tl_practice_analysis, aes(x=trialNo, y=TracklossForTrial)) +
geom_boxplot()
ggplot(tl_practice_analysis, aes(x=trialNo, y=TracklossForTrial)) +
geom_boxplot()
allMain <- filter(allData, phase=="Main")
# Applying it to the dataframe for trials, it's taking a long time, so we'll apply it in sections
a <- lapply(allMain$system_time_stamp, trial_time)
allMain$Trial_description <- a
# all main trial videos
allMain <- allMain[grep("ambig_video|trainingVideo|testVideo|biasVideo|testVideos|^biasTest", allMain$Trial_description),]
allMain$trialNo <- as.factor(allMain$trialNo)
allMain$lookMannerTest <- as.logical(allMain$lookMannerTest)
allMain$lookPathTest <- as.logical(allMain$lookPathTest)
allMain$system_time_stamp <- as.numeric(allMain$system_time_stamp)
# IDK IF THIS IS KOSHER OR NOT
## only keep the unique rows from the input
allMain %>%
distinct(trialNo, system_time_stamp, .keep_all = TRUE) -> allMain
data_allMain <- make_eyetrackingr_data(allMain,
participant_column = "subjectID",
trial_column = "trialNo",
item_columns = "itemID",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookMannerTest", "lookPathTest"),
treat_non_aoi_looks_as_missing = FALSE
)
tl_main_analysis <- trackloss_analysis(data_allMain)
ggplot(tl_main_analysis, aes(x=trialNo, y=TracklossForTrial)) +
geom_boxplot()
View(tl_main_analysis)
data_allMain_1 <- filter(allMain, trialNo==1)
# rank the data, based on subjectID and trialNo
data_allMain_1 <- data_allMain_1 %>%
group_by(subjectID, trialNo) %>%
mutate(Rank = dense_rank(system_time_stamp)) %>%
arrange(subjectID, trialNo, Rank)
#Starting to use eyetrackingR
data_allMain_1$Trial_description <- as.character(data_allMain_1$Trial_description)
data_allMain_1 <- make_eyetrackingr_data(data_allMain_1,
participant_column = "subjectID",
trial_column = "trialNo",
item_columns = c("Trial_description"),
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookMannerTest", "lookPathTest"),
treat_non_aoi_looks_as_missing = FALSE
)
# rezero system time stamps, so that at every trial start, the system time stamp is 0
response_window_main1 <- subset_by_window(data_allMain_1, window_start_msg = 1, msg_col = "Rank", rezero= TRUE, remove= FALSE)
# aggregate across trials within subjects in time analysis (time bin size is 0.5 seconds)
response_time_main1 <- make_time_sequence_data(response_window_main1, time_bin_size = 500000,
other_dv_columns = c("Trackloss_column"),
aois = NULL
)
ggplot(response_time_main1, aes(x=TimeBin, y=Trackloss_column)) +
#facet_wrap(~Trial_description) +
geom_line()
allMain_test <- filter(allData, phase=="Main")
# Applying it to the dataframe for trials, it's taking a long time, so we'll apply it in sections
a <- lapply(allMain_test$system_time_stamp, trial_time)
allMain_test$Trial_description <- a
# all main test videos, without bias
allMain_test_NoBias <- allMain_test[grep("testVideos", allMain_test$Trial_description),]
allMain_test_NoBias$trialNo <- as.factor(allMain_test_NoBias$trialNo)
allMain_test_NoBias$lookMannerTest <- as.logical(allMain_test_NoBias$lookMannerTest)
allMain_test_NoBias$lookPathTest <- as.logical(allMain_test_NoBias$lookPathTest)
allMain_test_NoBias$system_time_stamp <- as.numeric(allMain_test_NoBias$system_time_stamp)
# IDK IF THIS IS KOSHER OR NOT
## only keep the unique rows from the input
allMain_test_NoBias %>%
distinct(trialNo, system_time_stamp, .keep_all = TRUE) -> allMain_test_NoBias
data_NoBias <- make_eyetrackingr_data(allMain_test_NoBias,
participant_column = "subjectID",
trial_column = "trialNo",
item_columns = "itemID",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookMannerTest", "lookPathTest"),
treat_non_aoi_looks_as_missing = FALSE
)
# Cleaning data with 25% trackloss
response_window_clean <- clean_by_trackloss(data = data_NoBias, trial_prop_thresh = .25)
data_NoBias <- data_NoBias %>%
group_by(subjectID, trialNo) %>%
mutate(Rank = dense_rank(system_time_stamp)) %>%
arrange(subjectID, trialNo, Rank)
data_NoBias <- make_eyetrackingr_data(data_NoBias,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookMannerTest", "lookPathTest"),
treat_non_aoi_looks_as_missing = FALSE
)
response_window_NoBias <- subset_by_window(data_NoBias, window_start_msg = 1, msg_col = "Rank", rezero= TRUE, remove= FALSE)
# aggregate across trials within subjects in time analysis (time bin size is 0.3 seconds)
response_time_NoBias <- make_time_sequence_data(response_window_NoBias, time_bin_size = 300000,
predictor_columns = c("Condition"),
aois = c("lookMannerTest", "lookPathTest"),
summarize_by = "subjectID"
)
plottingmeandata_NB <- response_time_NoBias %>%
group_by(AOI, TimeBin, Condition) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(subjectID = 'Mean')
plot(response_time_NoBias, predictor_column = "Condition")
ggplot(plottingmeandata_NB, aes(x=TimeBin, y=meanProp, color = AOI)) +
facet_wrap(~Condition) +
geom_line()
plot(response_time_NoBias, predictor_column = "Condition")
ggplot(plottingmeandata_NB, aes(x=TimeBin, y=meanProp, color = AOI)) +
facet_wrap(~Condition) +
geom_line()
save.image("D:/D; Documenten/Studies/ReMa Linguistics/Internship/Analysis/Workspace_NoBias_Pilot2.RData")
ggplot(plottingmeandata, aes(x=TimeBin, y=meanProp, color = AOI)) +
facet_wrap(~subjectID) +
geom_line()
ggplot(plottingmeandata, aes(x=TimeBin, y=meanProp, color = AOI)) +
facet_wrap(~subjectID) +
geom_bar()
ggplot(plottingmeandata, aes(x=AOI, y=meanProp, color = AOI)) +
facet_wrap(~subjectID) +
geom_bar()
ggplot(plottingmeandata, aes(x=AOI, y=meanProp, color = AOI)) +
geom_bar()
help geom_bar
?geom_bar
ggplot(plottingmeandata, aes(x=AOI, y=meanProp, color = AOI)) +
geom_bar(stat="mean")
ggplot(plottingmeandata, aes(x=AOI, y=meanProp, color = AOI)) +
geom_bar(stat="prop")
ggplot(response_time, aes(x=AOI, y=Prop, color = AOI)) +
geom_bar(stat="prop")
ggplot(response_time, aes(x=AOI, y=Prop, color = AOI)) +
geom_bar(stat="identity")
ggplot(plottingmeandata, aes(x=AOI, y=meanProp, color = AOI)) +
geom_bar(stat="identity")
plottingindmeandata <- response_time %>%
group_by(subjectID, AOI) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE))
View(plottingindmeandata)
ggplot(plottingindmeandata, aes(x=AOI, y=meanProp, color = AOI)) +
geom_bar(stat="identity")
plottingindmeandata <- response_time %>%
group_by(AOI) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE))
ggplot(plottingindmeandata, aes(x=AOI, y=meanProp, fill = AOI)) +
geom_bar(stat="identity")
ggplot(plottingmeandata, aes(x=TimeBin, y=meanProp, color = AOI)) +
facet_wrap(~subjectID) +
geom_line()
plottingmeandata <- response_time %>%
group_by(AOI, TimeBin) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(subjectID = 'Mean')%>%
mutate(bigTimeBin = ifelse(Timebin < 15, "FirstQuarter", "EverythingElse"))
plottingmeandata <- response_time %>%
group_by(AOI, TimeBin) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(subjectID = 'Mean')%>%
mutate(bigTimeBin = ifelse(TimeBin < 15, "FirstQuarter", "EverythingElse"))
View(plottingmeandata)
plottingmeandata <- response_time %>%
group_by(AOI, TimeBin) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(subjectID = 'Mean')%>%
mutate(bigTimeBin = ifelse(TimeBin < 15, "FirstQuarter", ifelse(TimeBin <30, "SecondQuarter", ifelse(TimeBin < 45, "ThirdQuarter", "FourthQuarter"))))
View(plottingmeandata)
plottingindmeandata <- response_time %>%
group_by(AOI) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(bigTimeBin = ifelse(TimeBin < 15, "FirstQuarter", ifelse(TimeBin <30, "SecondQuarter", ifelse(TimeBin < 45, "ThirdQuarter", "FourthQuarter"))))
View(plottingindmeandata)
tl_main_analysis <- trackloss_analysis(data_allMain)
ggplot(tl_main_analysis, aes(x=trialNo, y=TracklossForTrial)) +
geom_boxplot()
data_allMain_1 <- filter(allMain, trialNo==1)
# rank the data, based on subjectID and trialNo
data_allMain_1 <- data_allMain_1 %>%
group_by(subjectID, trialNo) %>%
mutate(Rank = dense_rank(system_time_stamp)) %>%
arrange(subjectID, trialNo, Rank)
#Starting to use eyetrackingR
data_allMain_1$Trial_description <- as.character(data_allMain_1$Trial_description)
data_allMain_1 <- make_eyetrackingr_data(data_allMain_1,
participant_column = "subjectID",
trial_column = "trialNo",
item_columns = c("Trial_description"),
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookMannerTest", "lookPathTest"),
treat_non_aoi_looks_as_missing = FALSE
)
# rezero system time stamps, so that at every trial start, the system time stamp is 0
response_window_main1 <- subset_by_window(data_allMain_1, window_start_msg = 1, msg_col = "Rank", rezero= TRUE, remove= FALSE)
# aggregate across trials within subjects in time analysis (time bin size is 0.5 seconds)
response_time_main1 <- make_time_sequence_data(response_window_main1, time_bin_size = 500000,
other_dv_columns = c("Trackloss_column"),
aois = NULL
)
ggplot(response_time_main1, aes(x=TimeBin, y=Trackloss_column)) +
#facet_wrap(~Trial_description) +
geom_line()
ggplot(response_time_main1, aes(x=TimeBin, y=Trackloss_column)) +
facet_wrap(~Trial_description) +
geom_line()
ggplot(response_time_main1, aes(x=TimeBin, y=Trackloss_column)) +
#facet_wrap(~Trial_description) +
geom_line()
ggplot(plottingmeandata_NB, aes(x=TimeBin, y=meanProp, color = AOI)) +
facet_wrap(~Condition) +
geom_line()
plottingindmeandata <- response_time %>%
group_by(AOI, TimeBin) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(bigTimeBin = ifelse(TimeBin < 15, "FirstQuarter", ifelse(TimeBin <30, "SecondQuarter", ifelse(TimeBin < 45, "ThirdQuarter", "FourthQuarter"))))
ggplot(plottingindmeandata, aes(x=AOI, y=meanProp, fill = AOI)) +
facet_wrap(~bigTimeBin) +
geom_bar(stat="identity")
ggplot(plottingindmeandata, aes(x=AOI, y=meanProp, fill = AOI)) +
geom_bar(stat="identity")
ggplot(plottingindmeandata, aes(x=AOI, y=meanProp, fill = AOI)) +
facet_wrap(~bigTimeBin) +
geom_bar(stat="identity")
ggplot(plottingindmeandata, aes(x=AOI, y=meanProp, fill = AOI)) +
geom_bar(stat="identity")
ggplot(plottingindmeandata, aes(x=AOI, y=meanProp, fill = AOI)) +
facet_wrap(~bigTimeBin) +
geom_bar(stat="identity")
View(plottingindmeandata)
