allData %>%
group_by(Condition, subjectID, trialNo) %>%
mutate(lookActionBias = ifelse(VerbDomain == "CoS" & pathSideBias == "L" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, as.logical(FALSE),
ifelse(VerbDomain == "CoS" & pathSideBias == "R" & X < 1.250 & X > 0.67 & Y > 0.1963 & Y < 0.6313, as.logical(FALSE),
ifelse(VerbDomain == "CoS" & mannerSideBias == "L" & X < 0.605 & X > 0.25 & Y > 0.1963 & Y < 0.6313, as.logical(TRUE),
ifelse(VerbDomain == "CoS" & mannerSideBias == "R" & X < 1.250 & X > 0.67 & Y > 0.1963 & Y < 0.6313, as.logical(TRUE), as.logical(FALSE)))))) -> allData
allPractice <- filter(allData, phase=="Practice")
a <- lapply(allPractice$system_time_stamp, trial_time)
allPractice$Trial_description <- a
allPractice %>%
filter(str_detect(Trial_description, "testVideos")) -> df_practice_test
df_practice_test$lookPractice <- as.logical(df_practice_test$lookPractice)
df_practice_test$subjectID <- as.factor(df_practice_test$subjectID)
# Defining a trackloss column
df_practice_test$Trackloss_column <- ifelse(df_practice_test$L_valid == '1' & df_practice_test$R_valid == '1', FALSE,
ifelse(df_practice_test$L_valid == '0' & df_practice_test$R_valid == '1', TRUE,
ifelse(df_practice_test$L_valid == '1' & df_practice_test$R_valid == '0', TRUE,
ifelse(df_practice_test$L_valid == '0' & df_practice_test$R_valid == '0', TRUE, 'Error'))))
df_practice_test$Trackloss_column <- as.logical(df_practice_test$Trackloss_column)
data_practice <- make_eyetrackingr_data(df_practice_test,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookPractice", "lookNotPractice"),
treat_non_aoi_looks_as_missing = FALSE
)
data_practice <- data_practice %>%
group_by(subjectID, trialNo) %>%
mutate(Rank = dense_rank(system_time_stamp)) %>%
arrange(subjectID, trialNo, Rank)
data_practice <- make_eyetrackingr_data(data_practice,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookPractice", "lookNotPractice"),
treat_non_aoi_looks_as_missing = FALSE
)
# rezero system time stamps, so that at every trial start, the system time stamp is 0
response_window_practice <- subset_by_window(data_practice, window_start_msg = 1, msg_col = "Rank", rezero= TRUE, remove= FALSE)
# aggregate across trials within subjects in time analysis (time bin size is 0.2 seconds)
response_time_practice <- make_time_sequence_data(response_window_practice, time_bin_size = 200000,
aois = c("lookPractice", "lookNotPractice")
)
# transforming microseconds to miliseconds
response_time_practice <- response_time_practice %>%
mutate(time_ms = Time/1000)
# visualize time results
plot_practice_mean <- response_time_practice %>%
group_by(AOI, TimeBin, time_ms) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(subjectID = 'Mean')%>%
mutate(bigTimeBin = ifelse(TimeBin < 15, "FirstQuarter", ifelse(TimeBin <30, "SecondQuarter", ifelse(TimeBin < 45, "ThirdQuarter", "FourthQuarter"))))
plot_practice_trial <- response_time_practice %>%
group_by(AOI, TimeBin, trialNo, time_ms) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE))
plot_practice_ind <- response_time_practice %>%
group_by(subjectID, AOI, TimeBin, time_ms) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE))
# plot data for the mean proportion of looks to video in a line graph
ggplot(plot_practice_mean, aes(x=time_ms, y=meanProp, color = AOI)) +
facet_wrap(~subjectID) +
geom_line() +
ylab("Proportion of looks to video") +
xlab("Time (ms)") +
ggtitle("Looks during practice trials") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggplot(plot_practice_ind, aes(x=time_ms, y=meanProp, color = AOI)) +
facet_wrap(~subjectID) +
geom_line()
# plot data per trial in a line graph
ggplot(plot_practice_trial, aes(x=time_ms, y=meanProp, color = AOI)) +
facet_wrap(~trialNo) +
geom_line()
# Analysing trackloss data practice trials
tl_practice_analysis <- trackloss_analysis(data_practice)
ggplot(tl_practice_analysis, aes(x=trialNo, y=TracklossForTrial)) +
geom_boxplot() +
ylab("Trackloss") +
xlab("Trial") +
ggtitle("Trackloss during practice trials") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
response_window_agg_by_sub_practice <- make_time_window_data(data_practice, aois = c("lookPractice", "lookNotPractice"), summarize_by = c("subjectID"))
# Creating error bars
response_window_agg_by_sub_practice_sum <- response_window_agg_by_sub_practice %>%
dplyr::group_by(AOI) %>%   # the grouping variable
summarise(mean_prop = mean(Prop),  # calculates the mean of each group
sd_prop = sd(Prop), # calculates the standard deviation of each group
n_prop = n(),  # calculates the sample size per group
SE_prop = sd(Prop)/sqrt(n())) # calculates the standard error of each group
# Calculate standard error of the mean (SEM)
response_window_agg_by_sub_practice_sum$SEM_prop <- response_window_agg_by_sub_practice_sum$sd_prop/sqrt(response_window_agg_by_sub_practice_sum$n_prop)
# Calculate margin of error for confidence interval
alpha <- 0.05 # for a (1.00-alpha)=95% confidence interval
response_window_agg_by_sub_practice_sum$ME_prop <- qt(1-alpha/2, df=response_window_agg_by_sub_practice_sum$n_prop)*response_window_agg_by_sub_practice_sum$SEM_prop
# Creating a bar graph for the proportion of looks to the correct video with 95% CI
ggplot(data=response_window_agg_by_sub_practice_sum, aes(x=AOI, y=mean_prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
geom_errorbar(aes(ymin=mean_prop-ME_prop, ymax=mean_prop+ME_prop), width=0.2) +
ylab("Proportion of looks to correct video") +
ggtitle("Looks during practice") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
plot_practice_mean_ind <- response_time_practice %>%
group_by(AOI, TimeBin) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(bigTimeBin = ifelse(TimeBin < 15, "FirstQuarter", ifelse(TimeBin <30, "SecondQuarter", ifelse(TimeBin < 45, "ThirdQuarter", "FourthQuarter"))))
# Creating error bars
plot_practice_mean_ind_sum <- plot_practice_mean_ind %>%
dplyr::group_by(AOI, bigTimeBin) %>%   # the grouping variable
summarise(mean_prop = mean(meanProp),  # calculates the mean of each group
sd_prop = sd(meanProp), # calculates the standard deviation of each group
n_prop = n(),  # calculates the sample size per group
SE_prop = sd(meanProp)/sqrt(n())) # calculates the standard error of each group
# Calculate standard error of the mean (SEM)
plot_practice_mean_ind_sum$SEM_prop <- plot_practice_mean_ind_sum$sd_prop/sqrt(plot_practice_mean_ind_sum$n_prop)
# Calculate margin of error for confidence interval
alpha <- 0.05 # for a (1.00-alpha)=95% confidence interval
plot_practice_mean_ind_sum$ME_prop <- qt(1-alpha/2, df=plot_practice_mean_ind_sum$n_prop)*plot_practice_mean_ind_sum$SEM_prop
# Make the bar graph
ggplot(plot_practice_mean_ind_sum, aes(x=AOI, y=mean_prop, fill = AOI)) +
facet_wrap(~bigTimeBin) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=mean_prop-ME_prop, ymax=mean_prop+ME_prop), width=0.2, position=position_dodge(.9)) +
ylab("Proportion of looks to correct video")  +
ggtitle("Looks to practice trials per quarter") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=12),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
allMain <- filter(allData, phase=="Main")
a <- lapply(allMain$system_time_stamp, trial_time)
allMain$Trial_description <- a
allMain <- allMain[grep("ambig_video|trainingVideo|testVideo|biasVideo|testVideos|^biasTest", allMain$Trial_description),]
allMain$trialNo <- as.factor(allMain$trialNo)
allMain$lookMannerTest <- as.logical(allMain$lookMannerTest)
allMain$lookPathTest <- as.logical(allMain$lookPathTest)
allMain$system_time_stamp <- as.numeric(allMain$system_time_stamp)
allMain %>%
distinct(trialNo, system_time_stamp, .keep_all = TRUE) -> allMain
data_main <- make_eyetrackingr_data(allMain,
participant_column = "subjectID",
trial_column = "trialNo",
item_columns = "itemID",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookMannerTest", "lookPathTest"),
treat_non_aoi_looks_as_missing = FALSE
)
tl_main_analysis <- trackloss_analysis(data_main)
ggplot(tl_main_analysis, aes(x=trialNo, y=TracklossForTrial)) +
geom_boxplot() +
ylab("Trackloss") +
xlab("Trial") +
ggtitle("Trackloss during main trials") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_main_trackloss_per_trial.png")
allMain_test <- filter(allData, phase=="Main")
a <- lapply(allMain_test$system_time_stamp, trial_time)
allMain_test_noBias <- allMain[grep("testVideos", allMain$Trial_description),]
allMain_test_noBias$trialNo <- as.factor(allMain_test_noBias$trialNo)
allMain_test_noBias$lookMannerTest <- as.logical(allMain_test_noBias$lookMannerTest)
allMain_test_noBias$lookPathTest <- as.logical(allMain_test_noBias$lookPathTest)
allMain_test_noBias$system_time_stamp <- as.numeric(allMain_test_noBias$system_time_stamp)
allMain_test_noBias %>%
distinct(trialNo, system_time_stamp, .keep_all = TRUE) -> allMain_test_noBias
data_noBias <- make_eyetrackingr_data(allMain_test_noBias,
participant_column = "subjectID",
trial_column = "trialNo",
item_columns = "itemID",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookMannerTest", "lookPathTest"),
treat_non_aoi_looks_as_missing = FALSE
)
response_window_clean_noBias <- clean_by_trackloss(data = data_noBias, trial_prop_thresh = .25)
data_noBias <- data_noBias %>%
group_by(subjectID, trialNo) %>%
mutate(Rank = dense_rank(system_time_stamp)) %>%
arrange(subjectID, trialNo, Rank)
data_noBias <- make_eyetrackingr_data(data_noBias,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookMannerTest", "lookPathTest"),
treat_non_aoi_looks_as_missing = FALSE
)
response_window_noBias <- subset_by_window(data_noBias, window_start_msg = 1, msg_col = "Rank", rezero= TRUE, remove= FALSE)
# aggregate across trials within subjects in time analysis (time bin size is 0.3 seconds)
response_time_noBias <- make_time_sequence_data(response_window_noBias, time_bin_size = 300000,
predictor_columns = c("Condition"),
aois = c("lookMannerTest", "lookPathTest"),
summarize_by = "subjectID"
)
# transforming microseconds to miliseconds
response_time_noBias <- response_time_noBias %>%
mutate(time_ms = Time/1000)
# visualize time results
plot_noBias_mean <- response_time_noBias %>%
group_by(AOI, TimeBin, Condition,time_ms) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(subjectID = 'Mean')
# plot data for the mean in a line graph
ggplot(plot_noBias_mean, aes(x=time_ms, y=meanProp, color = AOI)) +
facet_wrap(~Condition) +
geom_line() +
ylab("Proportion of looks to video") +
xlab("Time (ms)") +
ggtitle ("Looks to test videos") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_main_lookingtimesAOI_learning_test.png")
response_window_agg_by_sub_noBias <- make_time_window_data(response_window_clean_noBias, aois = c("lookMannerTest", "lookPathTest"), predictor_columns=c("Condition"), summarize_by = c("subjectID"))
# Creating error bars
response_window_agg_by_sub_noBias_sum <- response_window_agg_by_sub_noBias %>%
dplyr::group_by(Condition, AOI) %>%   # the grouping variable
summarise(mean_prop = mean(Prop),  # calculates the mean of each group
sd_prop = sd(Prop), # calculates the standard deviation of each group
n_prop = n(),  # calculates the sample size per group
SE_prop = sd(Prop)/sqrt(n())) # calculates the standard error of each group
# Calculate standard error of the mean (SEM)
response_window_agg_by_sub_noBias_sum$SEM_prop <- response_window_agg_by_sub_noBias_sum$sd_prop/sqrt(response_window_agg_by_sub_noBias_sum$n_prop)
# Calculate margin of error for confidence interval
alpha <- 0.05 # for a (1.00-alpha)=95% confidence interval
response_window_agg_by_sub_noBias_sum$ME_prop <- qt(1-alpha/2, df=response_window_agg_by_sub_noBias_sum$n_prop)*response_window_agg_by_sub_noBias_sum$SEM_prop
# Creating the bar graph for the learning tests
ggplot(data=response_window_agg_by_sub_noBias_sum, aes(x=Condition, y=mean_prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
geom_errorbar(aes(ymin=mean_prop-ME_prop, ymax=mean_prop+ME_prop), width=0.2, position=position_dodge(.9)) +
ylab("Proportion of looks to correct video") +
ggtitle("Looks to learning test")
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_noBias_bar_AOI.png")
plot_noBias_mean_ind <- response_time_noBias %>%
group_by(AOI, TimeBin, Condition) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(bigTimeBin = ifelse(TimeBin < 15, "FirstQuarter", ifelse(TimeBin <30, "SecondQuarter", ifelse(TimeBin < 45, "ThirdQuarter", "FourthQuarter"))))
# Creating error bars
plot_noBias_mean_ind_sum <- plot_noBias_mean_ind %>%
dplyr::group_by(AOI, bigTimeBin, Condition) %>%   # the grouping variable
summarise(mean_prop = mean(meanProp),  # calculates the mean of each group
sd_prop = sd(meanProp), # calculates the standard deviation of each group
n_prop = n(),  # calculates the sample size per group
SE_prop = sd(meanProp)/sqrt(n())) # calculates the standard error of each group
# Calculate standard error of the mean (SEM)
plot_noBias_mean_ind_sum$SEM_prop <- plot_noBias_mean_ind_sum$sd_prop/sqrt(plot_noBias_mean_ind_sum$n_prop)
# Calculate margin of error for confidence interval
alpha <- 0.05 # for a (1.00-alpha)=95% confidence interval
plot_noBias_mean_ind_sum$ME_prop <- qt(1-alpha/2, df=plot_noBias_mean_ind_sum$n_prop)*plot_noBias_mean_ind_sum$SEM_prop
# Make the bar graph
ggplot(plot_noBias_mean_ind_sum, aes(x=Condition, y=mean_prop, fill = AOI)) +
facet_wrap(~bigTimeBin) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=mean_prop-ME_prop, ymax=mean_prop+ME_prop), width=0.2, position=position_dodge(.9)) +
ylab("Proportion of looks to correct video")  +
ggtitle("Looks to learning test per quarter") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=12),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_noBias_bar_AOI_quarters.png")
response_window_agg_by_sub_trialNo_noBias <- make_time_window_data(response_window_clean_noBias, aois = c("lookMannerTest", "lookPathTest"), predictor_columns=c("Condition"), summarize_by = c("subjectID", "trialNo"))
# Creating a bar graph for every trial of the learning tests
ggplot(data=response_window_agg_by_sub_trialNo_noBias, aes(x=Condition, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
ylab("Proportion of looks to correct video") +
facet_wrap(~trialNo) +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
allMain_test_bias <- allMain[grep("^biasTest", allMain$Trial_description),]
allMain_test_bias$trialNo <- as.factor(allMain_test_Bias$trialNo)
allMain_test_bias$lookMannerBias <- as.logical(allMain_test_Bias$lookMannerBias)
allMain_test_bias$lookPathBias <- as.logical(allMain_test_Bias$lookPathBias)
allMain_test_bias$system_time_stamp <- as.numeric(allMain_test_Bias$system_time_stamp)
allMain_test_bias <- allMain[grep("^biasTest", allMain$Trial_description),]
allMain_test_bias$trialNo <- as.factor(allMain_test_bias$trialNo)
allMain_test_bias$lookMannerBias <- as.logical(allMain_test_bias$lookMannerBias)
allMain_test_bias$lookPathBias <- as.logical(allMain_test_bias$lookPathBias)
allMain_test_bias$system_time_stamp <- as.numeric(allMain_test_bias$system_time_stamp)
allMain_test_bias %>%
distinct(trialNo, system_time_stamp, .keep_all = TRUE) -> allMain_test_bias
data_bias <- make_eyetrackingr_data(allMain_test_bias,
participant_column = "subjectID",
trial_column = "trialNo",
item_columns = "itemID",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookMannerBias", "lookPathBias"),
treat_non_aoi_looks_as_missing = FALSE
)
# Cleaning data with 25% trackloss
response_window_clean_bias <- clean_by_trackloss(data = data_bias, trial_prop_thresh = .25)
data_bias <- data_bias %>%
group_by(subjectID, trialNo) %>%
mutate(Rank = dense_rank(system_time_stamp)) %>%
arrange(subjectID, trialNo, Rank)
data_bias <- make_eyetrackingr_data(data_bias,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookMannerBias", "lookPathBias"),
treat_non_aoi_looks_as_missing = FALSE
)
response_window_bias <- subset_by_window(data_bias, window_start_msg = 1, msg_col = "Rank", rezero= TRUE, remove= FALSE)
# aggregate across trials within subjects in time analysis (time bin size is 0.3 seconds)
response_time_bias <- make_time_sequence_data(response_window_bias, time_bin_size = 300000,
predictor_columns = c("Condition"),
aois = c("lookMannerBias", "lookPathBias"),
summarize_by = "subjectID"
)
# transforming microseconds to miliseconds
response_time_bias <- response_time_bias %>%
mutate(time_ms = Time/1000)
# visualize time results
plot_bias_mean <- response_time_bias %>%
group_by(AOI, TimeBin, Condition, time_ms) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(subjectID = 'Mean')
# plot data for the mean in a line graph
ggplot(plot_bias_mean, aes(x=time_ms, y=meanProp, color = AOI)) +
facet_wrap(~Condition) +
geom_line() +
ylab("Proportion of looks to video") +
xlab("Time (ms)") +
ggtitle("Looks to bias test videos") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_main_lookingtimesAOI_bias_test.png")
response_window_agg_by_sub_bias <- make_time_window_data(response_window_clean_bias, aois = c("lookMannerBias", "lookPathBias"), predictor_columns=c("Condition"), summarize_by = c("subjectID"))
# Creating the error bars
response_window_agg_by_sub_bias_sum <- response_window_agg_by_sub_bias %>%
dplyr::group_by(Condition, AOI) %>%   # the grouping variable
summarise(mean_prop = mean(Prop),  # calculates the mean of each group
sd_prop = sd(Prop), # calculates the standard deviation of each group
n_prop = n(),  # calculates the sample size per group
SE_prop = sd(Prop)/sqrt(n())) # calculates the standard error of each group
# Calculate standard error of the mean (SEM)
response_window_agg_by_sub_bias_sum$SEM_prop <- response_window_agg_by_sub_bias_sum$sd_prop/sqrt(response_window_agg_by_sub_bias_sum$n_prop)
# Calculate margin of error for confidence interval
alpha <- 0.05 # for a (1.00-alpha)=95% confidence interval
response_window_agg_by_sub_bias_sum$ME_prop <- qt(1-alpha/2, df=response_window_agg_by_sub_bias_sum$n_prop)*response_window_agg_by_sub_bias_sum$SEM_prop
# Creating the bar graph
ggplot(data=response_window_agg_by_sub_bias_sum, aes(x=Condition, y=mean_prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
geom_errorbar(aes(ymin=mean_prop-ME_prop, ymax=mean_prop+ME_prop), width=0.2, position=position_dodge(.9)) +
ylab("Proportion of looks to correct video") +
ggtitle("Looks to bias test videos") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_Bias_bar_AOI.png")
response_window_bias_clean <- clean_by_trackloss(data = response_window_bias, trial_prop_thresh = .25)
# aggregate across trials within subjects in time analysis (time bin size is 0.3 seconds) with cleaned data
response_time_bias_clean <- make_time_sequence_data(response_window_bias_clean, time_bin_size = 300000,
predictor_columns = c("Condition"),
aois = c("lookMannerBias", "lookPathBias"),
summarize_by = "subjectID"
)
plot_bias_mean_ind <- response_time_bias_clean %>%
group_by(AOI, TimeBin, Condition) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(bigTimeBin = ifelse(TimeBin < 15, "FirstQuarter", ifelse(TimeBin <30, "SecondQuarter", ifelse(TimeBin < 45, "ThirdQuarter", "FourthQuarter"))))
plot_bias_mean_ind <- na.omit(plot_bias_mean_ind)
plot_bias_mean_ind_sum <- plot_bias_mean_ind %>%
dplyr::group_by(AOI, bigTimeBin, Condition) %>%   # the grouping variable
summarise(mean_prop = mean(meanProp),  # calculates the mean of each group
sd_prop = sd(meanProp), # calculates the standard deviation of each group
n_prop = n(),  # calculates the sample size per group
SE_prop = sd(meanProp)/sqrt(n())) # calculates the standard error of each group
# Calculate standard error of the mean (SEM)
plot_bias_mean_ind_sum$SEM_prop <- plot_bias_mean_ind_sum$sd_prop/sqrt(plot_bias_mean_ind_sum$n_prop)
# Calculate margin of error for confidence interval
alpha <- 0.05 # for a (1.00-alpha)=95% confidence interval
plot_bias_mean_ind_sum$ME_prop <- qt(1-alpha/2, df=plot_bias_mean_ind_sum$n_prop)*plot_bias_mean_ind_sum$SEM_prop
# Make the bar graph
ggplot(plot_bias_mean_ind_sum, aes(x=Condition, y=mean_prop, fill = AOI)) +
facet_wrap(~bigTimeBin) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
geom_errorbar(aes(ymin=mean_prop-ME_prop, ymax=mean_prop+ME_prop), width=0.2, position=position_dodge(.9)) +
ylab("Proportion of looks to correct video")  +
ggtitle("Looks to bias videos per quarter") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=12),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_bias_bar_AOI_quarters.png")
allMain_test <- allMain[grep("testVideos|biasTest", allMain$Trial_description),]
allMain_test$trialNo <- as.factor(allMain_test$trialNo)
allMain_test$lookMannerBias <- as.logical(allMain_test$lookMannerBias)
allMain_test$lookMannerTest <- as.logical(allMain_test$lookMannerTest)
allMain_test$lookPathBias <- as.logical(allMain_test$lookPathBias)
allMain_test$lookPathTest <- as.logical(allMain_test$lookPathTest)
allMain_test$system_time_stamp <- as.numeric(allMain_test$system_time_stamp)
allMain_test %>%
distinct(trialNo, system_time_stamp, .keep_all = TRUE) -> allMain_test
# Starting to use eyetrackingR
data_main_test <- make_eyetrackingr_data(allMain_test,
participant_column = "subjectID",
trial_column = "trialNo",
item_columns = "itemID",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookMannerBias", "lookMannerTest", "lookPathBias", "lookPathTest"),
treat_non_aoi_looks_as_missing = FALSE
)
# Cleaning data with 25% trackloss
response_window_clean <- clean_by_trackloss(data = data_main_test, trial_prop_thresh = .25)
response_window_agg_by_sub_main <- make_time_window_data(response_window_clean, aois = c("lookMannerBias", "lookMannerTest", "lookPathBias", "lookPathTest"), summarize_by = c("Condition"))
response_window_agg_by_sub_main$phase <- ifelse(response_window_agg_by_sub_main$AOI == "lookMannerBias" | response_window_agg_by_sub_main$AOI == "lookPathBias", "Bias Test",
ifelse(response_window_agg_by_sub_main$AOI == "lookMannerTest" | response_window_agg_by_sub_main$AOI == "lookPathTest", "Verb Test", "Error"))
# Getting an SE for each response (MannerBias, etc.)
response_window_agg_by_sub_main$Condition <- factor(response_window_agg_by_sub_main$Condition, levels=c("Manner", "Path"))
describe_main_1 <- describe_data(response_window_agg_by_sub_main, describe_column = "Prop", group_columns = c("AOI"))
describe_main <- describe_data(response_window_agg_by_sub_main, describe_column = "Prop", group_columns = c("Condition", "AOI"))
describe_main$SD <- describe_main_1$SD
describe_main$Var <- describe_main_1$Var
describe_main$se <- describe_main$SD/sqrt(describe_main$N)
response_window_agg_by_sub_main <- merge(response_window_agg_by_sub_main, describe_main, by=c("Condition", "AOI"))
# Making a bar graph
## gives a graph comparing the bias test and the verb test
ggplot(data=response_window_agg_by_sub_main, aes(x=Condition, y=Prop, fill=AOI)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
ylab("Proportion of looks to Manner") +
guides(fill=guide_legend(title=NULL)) +
geom_errorbar(aes(ymin=Prop-se, ymax=Prop+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(axis.title = element_text(size=12),
axis.text.x  = element_text(size=12),
axis.text.y = element_text(size=12),
plot.title = element_text(size=18, face="bold"),
strip.text.x = element_text(size=18),
legend.text = element_text(size = 12),
legend.position="top") +
scale_fill_manual(values=c("#F65D57", "#CC3399", "#00B4B8", "#3399FF"),
breaks=c("lookMannerBias", "lookMannerTest", "lookPathBias", "lookPathTest"),
labels=c("Manner Bias", "Manner Test", "Path Bias", "Path Test")) +
facet_wrap(~phase)
allMain_test <- allMain[grep("testVideos|^biasTest", allMain$Trial_description),]
allMain_test$trialNo <- as.factor(allMain_test$trialNo)
allMain_test$lookMannerBias <- as.logical(allMain_test$lookMannerBias)
allMain_test$lookMannerTest <- as.logical(allMain_test$lookMannerTest)
allMain_test$lookPathBias <- as.logical(allMain_test$lookPathBias)
allMain_test$lookPathTest <- as.logical(allMain_test$lookPathTest)
allMain_test$system_time_stamp <- as.numeric(allMain_test$system_time_stamp)
# IDK IF THIS IS KOSHER OR NOT
## only keep the unique rows from the input
allMain_test %>%
distinct(trialNo, system_time_stamp, .keep_all = TRUE) -> allMain_test
data_main_test <- make_eyetrackingr_data(allMain_test,
participant_column = "subjectID",
trial_column = "trialNo",
item_columns = "itemID",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookMannerBias", "lookMannerTest", "lookPathBias", "lookPathTest"),
treat_non_aoi_looks_as_missing = FALSE
)
response_window_clean <- clean_by_trackloss(data = data_main_test, trial_prop_thresh = .25)
response_window_agg_by_sub_main <- make_time_window_data(response_window_clean, aois = c("lookMannerBias", "lookMannerTest", "lookPathBias", "lookPathTest"), summarize_by = c("Condition"))
response_window_agg_by_sub_main$phase <- ifelse(response_window_agg_by_sub_main$AOI == "lookMannerBias" | response_window_agg_by_sub_main$AOI == "lookPathBias", "Bias Test",
ifelse(response_window_agg_by_sub_main$AOI == "lookMannerTest" | response_window_agg_by_sub_main$AOI == "lookPathTest", "Verb Test", "Error"))
# Getting an SE for each response (MannerBias, etc.)
response_window_agg_by_sub_main$Condition <- factor(response_window_agg_by_sub_main$Condition, levels=c("Manner", "Path"))
describe_main_1 <- describe_data(response_window_agg_by_sub_main, describe_column = "Prop", group_columns = c("AOI"))
describe_main <- describe_data(response_window_agg_by_sub_main, describe_column = "Prop", group_columns = c("Condition", "AOI"))
describe_main$SD <- describe_main_1$SD
describe_main$Var <- describe_main_1$Var
describe_main$se <- describe_main$SD/sqrt(describe_main$N)
response_window_agg_by_sub_main <- merge(response_window_agg_by_sub_main, describe_main, by=c("Condition", "AOI"))
ggplot(data=response_window_agg_by_sub_main, aes(x=Condition, y=Prop, fill=AOI)) +
geom_bar(stat="identity", position=position_dodge(), colour="black") +
ylab("Proportion of looks to Manner") +
guides(fill=guide_legend(title=NULL)) +
geom_errorbar(aes(ymin=Prop-se, ymax=Prop+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
theme(axis.title = element_text(size=12),
axis.text.x  = element_text(size=12),
axis.text.y = element_text(size=12),
plot.title = element_text(size=18, face="bold"),
strip.text.x = element_text(size=18),
legend.text = element_text(size = 12),
legend.position="top") +
scale_fill_manual(values=c("#F65D57", "#CC3399", "#00B4B8", "#3399FF"),
breaks=c("lookMannerBias", "lookMannerTest", "lookPathBias", "lookPathTest"),
labels=c("Manner Bias", "Manner Test", "Path Bias", "Path Test")) +
facet_wrap(~phase)
