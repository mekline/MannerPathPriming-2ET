arrange(subjectID, trialNo, Rank)
data_Bias <- make_eyetrackingr_data(data_Bias,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookMannerBias", "lookPathBias"),
treat_non_aoi_looks_as_missing = FALSE
)
response_window_Bias <- subset_by_window(data_Bias, window_start_msg = 1, msg_col = "Rank", rezero= TRUE, remove= FALSE)
# aggregate across trials within subjects in time analysis (time bin size is 0.3 seconds)
response_time_Bias <- make_time_sequence_data(response_window_Bias, time_bin_size = 300000,
predictor_columns = c("Condition"),
aois = c("lookMannerBias", "lookPathBias"),
summarize_by = "subjectID"
)
# transforming microseconds to miliseconds
response_time_Bias <- response_time_Bias %>%
mutate(time_ms = Time/1000)
# visualize time results
plot_Bias_mean <- response_time_Bias %>%
group_by(AOI, TimeBin, Condition,time_ms) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(subjectID = 'Mean')
# plot data for the mean
ggplot(plot_Bias_mean, aes(x=time_ms, y=meanProp, color = AOI)) +
facet_wrap(~Condition) +
geom_line() +
ylab("Proportion of looks to video") +
xlab("Time") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
response_window_agg_by_sub_Bias <- make_time_window_data(response_window_clean_Bias, aois = c("lookMannerBias", "lookPathBias"), predictor_columns=c("Condition"), summarize_by = c("subjectID"))
ggplot(data=response_window_agg_by_sub_Bias, aes(x=Condition, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
# Aggregating by subjectID and trialNo
response_window_agg_by_sub_trialNo_Bias <- make_time_window_data(response_window_clean_Bias, aois = c("lookMannerBias", "lookPathBias"), predictor_columns=c("Condition"), summarize_by = c("subjectID", "trialNo"))
ggplot(data=response_window_agg_by_sub_trialNo_Bias, aes(x=Condition, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
ylab("Proportion of looks to correct video") +
facet_wrap(~trialNo) +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggplot(plot_practice_mean_half, aes(x=time_ms, y=meanProp, color = AOI)) +
geom_errorbar(aes(ymin=len-se, ymax=len+se), width=.1, position=pd) +
facet_wrap(~subjectID) +
geom_line() +
ylab("Proportion of looks to video") +
xlab("Time") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggplot(data=response_window_agg_by_sub_practice, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
geom_errorbar(aes(ymin=len-se, ymax=len+se), width=.1, position=pd) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggplot(data=response_window_agg_by_sub_practice, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
geom_errorbar(aes(ymin=len-se, ymax=len+se), width=.1, position=position_dodge()) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
load("D:/D; Documenten/Studies/ReMa Linguistics/Internship/Analysis/Workspace_NoBias_Pilot2.RData")
load("D:/D; Documenten/Studies/ReMa Linguistics/Internship/Analysis/Workspace_NoBias_Pilot2.RData")
allData %>%
group_by(Condition, subjectID, trialNo) %>%
mutate(lookPracticeHalf = ifelse(phase == "Practice" & trialNo == "1" & X > 0.67, as.logical(TRUE),
ifelse(phase == "Practice" & trialNo == "2" & X < 0.605, as.logical(TRUE),
ifelse(phase == "Practice" & trialNo == "3" & X < 0.605, as.logical(TRUE),
ifelse(phase == "Practice" & trialNo == "4" & X < 0.605, as.logical(TRUE), as.logical(FALSE)))))) %>%
mutate(lookNotPracticeHalf = ifelse(phase == "Practice" & trialNo == "1" & X < 0.605, as.logical(TRUE),
ifelse(phase == "Practice" & trialNo == "2" & X > 0.67, as.logical(TRUE),
ifelse(phase == "Practice" & trialNo == "3" & X > 0.67, as.logical(TRUE),
ifelse(phase == "Practice" & trialNo == "4" & X > 0.67, as.logical(TRUE), as.logical(FALSE)))))) -> allData
allPractice <- filter(allData, phase=="Practice")
# Applying it to the dataframe for trials, it's taking a long time, so we'll apply it in sections
a <- lapply(allPractice$system_time_stamp, trial_time)
allPractice$Trial_description <- a
allPractice %>%
filter(str_detect(Trial_description, "testVideos")) -> df_practice_test
df_practice_test$lookPractice <- as.logical(df_practice_test$lookPractice)
# Reformatting allData
df_practice_test$subjectID <- as.factor(df_practice_test$subjectID)
# Defining a trackloss column
df_practice_test$Trackloss_column <- ifelse(df_practice_test$L_valid == '1' & df_practice_test$R_valid == '1', FALSE,
ifelse(df_practice_test$L_valid == '0' & df_practice_test$R_valid == '1', TRUE,
ifelse(df_practice_test$L_valid == '1' & df_practice_test$R_valid == '0', TRUE,
ifelse(df_practice_test$L_valid == '0' & df_practice_test$R_valid == '0', TRUE, 'Error'))))
df_practice_test$Trackloss_column <- as.logical(df_practice_test$Trackloss_column)
# Defining column for looks to anything other than the AOI's
df_practice_test$lookNotAOI <- ifelse(df_practice_test$Trackloss_column == "FALSE" & df_practice_test$lookPractice == "FALSE" & df_practice_test$lookNotPractice == "FALSE", TRUE, FALSE)
# Starting to use eyetrackingR
data_practice <- make_eyetrackingr_data(df_practice_test,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookPractice", "lookNotPractice", "lookNotAOI", "lookPracticeHalf", "lookNotPracticeHalf"),
treat_non_aoi_looks_as_missing = FALSE
)
data_practice <- data_practice %>%
group_by(subjectID, trialNo) %>%
mutate(Rank = dense_rank(system_time_stamp)) %>%
arrange(subjectID, trialNo, Rank)
data_practice <- make_eyetrackingr_data(data_practice,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookPractice", "lookNotPractice", "lookNotAOI"),
treat_non_aoi_looks_as_missing = FALSE
)
# making eyetrackingR data for AOI half screen
data_practice_half <- make_eyetrackingr_data(data_practice,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookPracticeHalf", "lookNotPracticeHalf"),
treat_non_aoi_looks_as_missing = FALSE
)
# rezero system time stamps, so that at every trial start, the system time stamp is 0
response_window_practice <- subset_by_window(data_practice, window_start_msg = 1, msg_col = "Rank", rezero= TRUE, remove= FALSE)
# again for AIO half screen
response_window_practice_half <- subset_by_window(data_practice_half, window_start_msg = 1, msg_col = "Rank", rezero= TRUE, remove= FALSE)
# aggregate across trials within subjects in time analysis (time bin size is 0.2 seconds)
response_time_practice <- make_time_sequence_data(response_window_practice, time_bin_size = 200000,
aois = c("lookPractice", "lookNotPractice", "lookNotAOI")
)
# transforming microseconds to miliseconds
response_time_practice <- response_time_practice %>%
mutate(time_ms = Time/1000)
# again for AIO half screen
response_time_practice_half <- make_time_sequence_data(response_window_practice_half, time_bin_size = 200000,
aois = c("lookPracticeHalf", "lookNotPracticeHalf")
)
# transforming microseconds to miliseconds
response_time_practice_half <- response_time_practice_half %>%
mutate(time_ms = Time/1000)
plot_practice_mean <- response_time_practice %>%
group_by(AOI, TimeBin, time_ms) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(subjectID = 'Mean')%>%
mutate(bigTimeBin = ifelse(TimeBin < 15, "FirstQuarter", ifelse(TimeBin <30, "SecondQuarter", ifelse(TimeBin < 45, "ThirdQuarter", "FourthQuarter"))))
plot_practice_mean_half <- response_time_practice_half %>%
group_by(AOI, TimeBin, time_ms) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(subjectID = 'Mean')%>%
mutate(bigTimeBin = ifelse(TimeBin < 15, "FirstQuarter", ifelse(TimeBin <30, "SecondQuarter", ifelse(TimeBin < 45, "ThirdQuarter", "FourthQuarter"))))
plot_practice_trial <- response_time_practice %>%
group_by(AOI, TimeBin, trialNo, time_ms) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE))
plot_practice_ind <- response_time_practice %>%
group_by(subjectID, AOI, TimeBin, time_ms) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE))
ggplot(plot_practice_mean, aes(x=time_ms, y=meanProp, color = AOI)) +
facet_wrap(~subjectID) +
geom_line() +
ylab("Proportion of looks to video") +
xlab("Time") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_practice_line_AOI.png")
ggplot(plot_practice_mean_half, aes(x=time_ms, y=meanProp, color = AOI)) +
facet_wrap(~subjectID) +
geom_line() +
ylab("Proportion of looks to video") +
xlab("Time") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_practice_line_AOI_half_screen.png")
#
tl_practice_analysis <- trackloss_analysis(data_practice)
ggplot(tl_practice_analysis, aes(x=trialNo, y=TracklossForTrial)) +
geom_boxplot()
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_practice_trackloss_per_trial.png")
# Aggregating by subjectID to get a proportion of looks to screen by AOI
response_window_agg_by_sub_practice <- make_time_window_data(data_practice, aois = c("lookPractice", "lookNotPractice", "lookNotAOI"), summarize_by = c("subjectID"))
ggplot(data=response_window_agg_by_sub_practice, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_practice_bar_AOI.png")
response_window_agg_by_sub_practice_half <- make_time_window_data(data_practice_half, aois = c("lookPracticeHalf", "lookNotPracticeHalf"), summarize_by = c("subjectID"))
ggplot(data=response_window_agg_by_sub_practice_half, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_practice_bar_AOI_half_screen.png")
plot_practice_mean_ind <- response_time_practice %>%
group_by(AOI, TimeBin) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(bigTimeBin = ifelse(TimeBin < 15, "FirstQuarter", ifelse(TimeBin <30, "SecondQuarter", ifelse(TimeBin < 45, "ThirdQuarter", "FourthQuarter"))))
ggplot(plot_practice_mean_ind, aes(x=AOI, y=meanProp, fill = AOI)) +
facet_wrap(~bigTimeBin) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge())
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_practice_bar_AOI_quarters.png")
plot_practice_mean_ind_half <- response_time_practice_half %>%
group_by(AOI, TimeBin) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(bigTimeBin = ifelse(TimeBin < 15, "FirstQuarter", ifelse(TimeBin <30, "SecondQuarter", ifelse(TimeBin < 45, "ThirdQuarter", "FourthQuarter"))))
ggplot(plot_practice_mean_ind_half, aes(x=AOI, y=meanProp, fill = AOI)) +
facet_wrap(~bigTimeBin) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge())
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_practice_bar_AOI_quarters_half_screen.png")
response_time_noBias <- response_time_noBias %>%
mutate(time_ms = Time/1000)
plot_noBias_mean <- response_time_noBias %>%
group_by(AOI, TimeBin, Condition,time_ms) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(subjectID = 'Mean')
plot(response_time_noBias, predictor_column = "Condition")
# plot data for the mean
ggplot(plot_noBias_mean, aes(x=time_ms, y=meanProp, color = AOI)) +
facet_wrap(~Condition) +
geom_line() +
ylab("Proportion of looks to video") +
xlab("Time") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_main_lookingtimesAOI_learning_test.png")
response_window_agg_by_sub_noBias <- make_time_window_data(response_window_clean_noBias, aois = c("lookMannerTest", "lookPathTest"), predictor_columns=c("Condition"), summarize_by = c("subjectID"))
ggplot(data=response_window_agg_by_sub_noBias, aes(x=Condition, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_noBias_bar_AOI.png")
response_window_agg_by_sub_trialNo_noBias <- make_time_window_data(response_window_clean_noBias, aois = c("lookMannerTest", "lookPathTest"), predictor_columns=c("Condition"), summarize_by = c("subjectID", "trialNo"))
ggplot(data=response_window_agg_by_sub_trialNo_noBias, aes(x=Condition, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
ylab("Proportion of looks to correct video") +
facet_wrap(~trialNo) +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
tl_noBias_analysis <- trackloss_analysis(data_noBias)
ggplot(tl_noBias_analysis, aes(x=trialNo, y=TracklossForTrial)) +
geom_boxplot()
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_mainNoBias_trackloss_per_trial.png")
allMain_test_Bias <- allMain_test[grep("biasTest", allMain_test$Trial_description),]
allMain_test_Bias$trialNo <- as.factor(allMain_test_Bias$trialNo)
allMain_test_Bias$lookMannerBias <- as.logical(allMain_test_Bias$lookMannerBias)
allMain_test_Bias$lookPathBias <- as.logical(allMain_test_Bias$lookPathBias)
allMain_test_Bias$system_time_stamp <- as.numeric(allMain_test_Bias$system_time_stamp)
allMain_test_Bias %>%
distinct(trialNo, system_time_stamp, .keep_all = TRUE) -> allMain_test_Bias
# Starting to use eyetrackingR
data_Bias <- make_eyetrackingr_data(allMain_test_Bias,
participant_column = "subjectID",
trial_column = "trialNo",
item_columns = "itemID",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookMannerBias", "lookPathBias"),
treat_non_aoi_looks_as_missing = FALSE
)
# Cleaning data with 25% trackloss
response_window_clean_Bias <- clean_by_trackloss(data = data_Bias, trial_prop_thresh = .25)
data_Bias <- data_Bias %>%
group_by(subjectID, trialNo) %>%
mutate(Rank = dense_rank(system_time_stamp)) %>%
arrange(subjectID, trialNo, Rank)
data_Bias <- make_eyetrackingr_data(data_Bias,
participant_column = "subjectID",
trial_column = "trialNo",
time_column = "system_time_stamp",
trackloss_column = "Trackloss_column",
aoi_columns = c("lookMannerBias", "lookPathBias"),
treat_non_aoi_looks_as_missing = FALSE
)
# rezero system time stamps, so that at every trial start, the system time stamp is 0
response_window_Bias <- subset_by_window(data_Bias, window_start_msg = 1, msg_col = "Rank", rezero= TRUE, remove= FALSE)
# aggregate across trials within subjects in time analysis (time bin size is 0.3 seconds)
response_time_Bias <- make_time_sequence_data(response_window_Bias, time_bin_size = 300000,
predictor_columns = c("Condition"),
aois = c("lookMannerBias", "lookPathBias"),
summarize_by = "subjectID"
)
# transforming microseconds to miliseconds
response_time_Bias <- response_time_Bias %>%
mutate(time_ms = Time/1000)
plot_Bias_mean <- response_time_Bias %>%
group_by(AOI, TimeBin, Condition,time_ms) %>%
summarize(meanProp = mean(Prop, na.rm = TRUE)) %>%
mutate(subjectID = 'Mean')
# plot data for the mean
ggplot(plot_Bias_mean, aes(x=time_ms, y=meanProp, color = AOI)) +
facet_wrap(~Condition) +
geom_line() +
ylab("Proportion of looks to video") +
xlab("Time") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_main_lookingtimesAOI_bias_test.png")
response_window_agg_by_sub_Bias <- make_time_window_data(response_window_clean_Bias, aois = c("lookMannerBias", "lookPathBias"), predictor_columns=c("Condition"), summarize_by = c("subjectID"))
ggplot(data=response_window_agg_by_sub_Bias, aes(x=Condition, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_Bias_bar_AOI.png")
response_window_agg_by_sub_trialNo_Bias <- make_time_window_data(response_window_clean_Bias, aois = c("lookMannerBias", "lookPathBias"), predictor_columns=c("Condition"), summarize_by = c("subjectID", "trialNo"))
ggplot(data=response_window_agg_by_sub_trialNo_Bias, aes(x=Condition, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
ylab("Proportion of looks to correct video") +
facet_wrap(~trialNo) +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
tl_Bias_analysis <- trackloss_analysis(data_Bias)
ggplot(tl_Bias_analysis, aes(x=trialNo, y=TracklossForTrial)) +
geom_boxplot()
ggsave("/Users/Lotte/Documents/Github/MannerPathPriming-2ET/Analysis/figs/pilot2_mainBias_trackloss_per_trial.png")
save.image("D:/D; Documenten/Studies/ReMa Linguistics/Internship/Analysis/Workspace_NoBias_Pilot2.RData")
describe_practice <- describe_data(response_window_agg_by_sub_practice, describe_column = "Prop", group_columns = c("AOI"))
describe_main$se <- describe_main$SD/sqrt(describe_main$N)
response_window_agg_by_sub_practice <- merge(response_window_agg_by_sub_practice, describe_practice, by=c("AOI"))
describe_practice <- describe_data(response_window_agg_by_sub_practice, describe_column = "Prop", group_columns = c("AOI"))
describe_practice$se <- describe_practice$SD/sqrt(describe_practice$N)
response_window_agg_by_sub_practice <- merge(response_window_agg_by_sub_practice, describe_practice, by=c("AOI"))
ggplot(data=response_window_agg_by_sub_practice, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
geom_errorbar(aes(ymin=Prop-se, ymax=Prop+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
response_window_agg_by_sub_practice_1 <- make_time_window_data(data_practice, aois = c("lookPractice", "lookNotPractice", "lookNotAOI"), summarize_by = c("AOI", "subjectID"))
response_window_agg_by_sub_practice_2 <- make_time_window_data(data_practice, aois = c("lookPractice", "lookNotPractice", "lookNotAOI"), summarize_by = c("AOI"))
describe_practice <- describe_data(response_window_agg_by_sub_practice_1, describe_column = "Prop", group_columns = c("AOI"))
describe_practice$se <- describe_practice$SD/sqrt(describe_practice$N)
response_window_agg_by_sub_practice_2 <- merge(response_window_agg_by_sub_practice, describe_practice, by=c("AOI"))
response_window_agg_by_sub_practice_1 <- make_time_window_data(data_practice, aois = c("lookPractice", "lookNotPractice", "lookNotAOI"), summarize_by = c("AOI", "subjectID"))
View(data_practice)
response_window_agg_by_sub_practice_1 <- make_time_window_data(data_practice, aois = c("lookPractice", "lookNotPractice", "lookNotAOI"), summarize_by = c("subjectID"))
describe_practice <- describe_data(response_window_agg_by_sub_practice_1, describe_column = "Prop", group_columns = c("AOI"))
describe_practice$se <- describe_practice$SD/sqrt(describe_practice$N)
response_window_agg_by_sub_practice <- merge(response_window_agg_by_sub_practice, describe_practice, by=c("AOI"))
ggplot(data=response_window_agg_by_sub_practice, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggplot(data=response_window_agg_by_sub_practice, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
geom_errorbar(aes(ymin=Prop-se, ymax=Prop+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
response_window_agg_by_sub_practice <- make_time_window_data(data_practice, aois = c("lookPractice", "lookNotPractice", "lookNotAOI"), summarize_by = c("subjectID"))
describe_practice <- describe_data(response_window_agg_by_sub_practice_1, describe_column = "Prop", group_columns = c("AOI"))
describe_practice$se <- describe_practice$SD/sqrt(describe_practice$N)
response_window_agg_by_sub_practice <- merge(response_window_agg_by_sub_practice, describe_practice, by=c("AOI"))
ggplot(data=response_window_agg_by_sub_practice, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
geom_errorbar(aes(ymin=Prop-se, ymax=Prop+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggplot(data=response_window_agg_by_sub_practice, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=Prop-se, ymax=Prop+se),
width=.2,                    # Width of the error bars
position=position_dodge(.9)) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
response_window_agg_by_sub_practice <- make_time_window_data(data_practice, aois = c("lookPractice", "lookNotPractice", "lookNotAOI"), summarize_by = c("subjectID"))
describe_practice <- describe_data(response_window_agg_by_sub_practice_1, describe_column = "Prop", group_columns = c("AOI"))
describe_practice$se <- describe_practice$SD/sqrt(describe_practice$N)
response_window_agg_by_sub_practice <- merge(response_window_agg_by_sub_practice, describe_practice, by=c("subjectID"))
View(describe_practice)
ggplot(data=response_window_agg_by_sub_practice, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
geom_errorbar(aes(ymin=Prop-se, ymax=Prop+se),
width=.2 +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggplot(data=response_window_agg_by_sub_practice, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
geom_errorbar(aes(ymin=Prop-se, ymax=Prop+se),
width=.2 +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggplot(data=response_window_agg_by_sub_practice, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
geom_errorbar(aes(ymin=Prop-se, ymax=Prop+se),
width=.2) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggplot(data=response_window_agg_by_sub_practice, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=Prop-se, ymax=Prop+se),
width=.2) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
response_window_agg_by_sub_practice <- make_time_window_data(data_practice, aois = c("lookPractice", "lookNotPractice", "lookNotAOI"), summarize_by = c("subjectID"))
describe_practice <- describe_data(response_window_agg_by_sub_practice_1, describe_column = "Prop", group_columns = c("AOI"))
describe_practice$se <- describe_practice$SD/sqrt(describe_practice$N)
response_window_agg_by_sub_practice <- merge(response_window_agg_by_sub_practice, describe_practice, by=c("AOI"))
ggplot(data=response_window_agg_by_sub_practice, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_errorbar(aes(ymin=Prop-se, ymax=Prop+se),
width=.2) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
ggplot(data=response_window_agg_by_sub_practice, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
geom_errorbar(aes(ymin=Prop-se, ymax=Prop+se),
width=.2) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
View(response_window_agg_by_sub_practice)
response_window_agg_by_sub_practice <- make_time_window_data(data_practice, aois = c("lookPractice", "lookNotPractice", "lookNotAOI"), summarize_by = c("subjectID"))
response_window_agg_by_sub_practice_1 <- make_time_window_data(response_window_agg_by_sub_practice, aois = c("lookPractice", "lookNotPractice", "lookNotAOI"), summarize_by = c("AOI", "subjectID"))
describe_practice <- describe_data(response_window_agg_by_sub_practice, describe_column = "Prop", group_columns = c("AOI"))
describe_practice$se <- describe_practice$SD/sqrt(describe_practice$N)
response_window_agg_by_sub_practice_1 <- merge(response_window_agg_by_sub_practice, describe_practice, by=c("AOI"))
View(response_window_agg_by_sub_practice_1)
ggplot(data=response_window_agg_by_sub_practice_1, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
geom_errorbar(aes(ymin=Prop-se, ymax=Prop+se),
width=.2) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
response_window_agg_by_sub_practice_1 <- make_time_window_data(response_window_agg_by_sub_practice, aois = c("lookPractice", "lookNotPractice", "lookNotAOI"), summarize_by = c("AOI", "subjectID"))
response_window_agg_by_sub_practice_2 <- make_time_window_data(response_window_agg_by_sub_practice, aois = c("lookPractice", "lookNotPractice", "lookNotAOI"), summarize_by = c("AOI"))
describe_practice <- describe_data(response_window_agg_by_sub_practice_1, describe_column = "Prop", group_columns = c("AOI"))
describe_practice$se <- describe_practice$SD/sqrt(describe_practice$N)
response_window_agg_by_sub_practice_2 <- merge(response_window_agg_by_sub_practice_2, describe_practice, by=c("AOI"))
ggplot(data=response_window_agg_by_sub_practice_2, aes(x=AOI, y=Prop, fill=AOI)) +
geom_bar(stat="summary", fun.y = "mean", position=position_dodge()) +
geom_errorbar(aes(ymin=Prop-se, ymax=Prop+se),
width=.2) +
ylab("Proportion of looks to correct video") +
theme(axis.title = element_text(size=18),
axis.text.x  = element_text(size=18),
axis.text.y = element_text(size=18),
plot.title = element_text(size=18, face="bold"))
